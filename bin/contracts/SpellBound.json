{
    "contractName": "SpellBound",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "bool",
                    "name": "access",
                    "type": "bool"
                }
            ],
            "name": "OperatorUpdated",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOperator",
                    "type": "address"
                }
            ],
            "name": "addOperator",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "soulQty",
                    "type": "uint256"
                }
            ],
            "name": "boundSpell",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "soulQty",
                    "type": "uint256"
                }
            ],
            "name": "enter",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "_soul",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "spellQty",
                    "type": "uint256"
                }
            ],
            "name": "leave",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "operator",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "operators",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "removingOperator",
                    "type": "address"
                }
            ],
            "name": "removeOperator",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "soul",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"access\",\"type\":\"bool\"}],\"name\":\"OperatorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"soulQty\",\"type\":\"uint256\"}],\"name\":\"boundSpell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"soulQty\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_soul\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spellQty\",\"type\":\"uint256\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"removingOperator\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soul\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addOperator(address)\":{\"details\":\"Adds address as operator of the contract. Can only be called by an operator.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeOperator(address)\":{\"details\":\"Leaves the contract without operator. It will not be possible to call `onlyOperator` functions anymore. Can only be called by an operator.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/contracts/SpellBound.sol\":\"SpellBound\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/contracts/SpellBound.sol\":{\"keccak256\":\"0xdfafa341c0bf6aa2987d3abe8ef3ebb918d413505cedf84cd53304838304750a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab4deaa885af50345e7f449c5a7a442fb05220685f04c1c68316742fc6ce81c\",\"dweb:/ipfs/QmUf9ZSYHG4pFhMk6YznnY9m4ZUfLxXErgpqrVpipo8JSq\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/contracts/libs/Operable.sol\":{\"keccak256\":\"0x42ed8bc3d1bae510c7bb000842d0bb5ad404c54b6f40d866a96799f4c5f2ed35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c1fc0a8f02544dcb6c73824f0ac7f8f90be4bd546b30d62406a8ac6953c7d31\",\"dweb:/ipfs/Qmd8b7hP488tPbDu37azhgKcii1dcFoQLdiHXp96x5Zo7h\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600a81526914dc195b1b109bdd5b9960b21b60208083019182528351808501909452600584526414d411531360da1b908401528151919291620000619160039162000191565b5080516200007790600490602084019062000191565b505050620000946200008e6200013b60201b60201c565b6200013f565b6000620000a06200013b565b6001600160a01b038116600081815260076020526040808220805460ff191660019081179091556006805480830182559084527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916851790559051939450927f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d9190a350600160085562000274565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200019f9062000237565b90600052602060002090601f016020900481019282620001c357600085556200020e565b82601f10620001de57805160ff19168380011785556200020e565b828001600101855582156200020e579182015b828111156200020e578251825591602001919060010190620001f1565b506200021c92915062000220565b5090565b5b808211156200021c576000815560010162000221565b6002810460018216806200024c57607f821691505b602082108114156200026e57634e487b7160e01b600052602260045260246000fd5b50919050565b611a9780620002846000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063a9059cbb1161007c578063a9059cbb14610294578063ac8a584a146102a7578063c4d66de8146102ba578063dd62ed3e146102cd578063e28d4906146102e0578063f2fde38b146102f35761014d565b80638da5cb5b1461023857806395d89b41146102405780639870d7fe146102485780639a3073911461025b578063a457c2d71461026e578063a59f3e0c146102815761014d565b8063395093511161011557806339509351146101cd57806357f96501146101e057806367dfd4c9146101f557806370a0823114610208578063715018a61461021b578063815b7a8c146102235761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019057806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a610306565b6040516101679190611441565b60405180910390f35b61018361017e36600461136a565b610398565b6040516101679190611436565b6101986103b5565b6040516101679190611931565b6101836101b336600461132a565b6103bb565b6101c0610454565b604051610167919061193a565b6101836101db36600461136a565b610459565b6101f36101ee3660046113b5565b6104ad565b005b6101f36102033660046113b5565b6105d3565b6101986102163660046112cf565b610768565b6101f3610783565b61022b6107ce565b60405161016791906113e5565b61022b6107dd565b61015a6107ec565b6101f36102563660046112cf565b6107fb565b6101836102693660046112cf565b610930565b61018361027c36600461136a565b610945565b6101f361028f3660046113b5565b6109be565b6101836102a236600461136a565b610b77565b6101f36102b53660046112cf565b610b8b565b6101f36102c83660046112cf565b610dad565b6101986102db3660046112f2565b610e1c565b61022b6102ee3660046113b5565b610e47565b6101f36103013660046112cf565b610e71565b606060038054610315906119db565b80601f0160208091040260200160405190810160405280929190818152602001828054610341906119db565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050905090565b60006103ac6103a5610ee2565b8484610ee6565b50600192915050565b60025490565b60006103c8848484610f9a565b6001600160a01b0384166000908152600160205260408120816103e9610ee2565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156104355760405162461bcd60e51b815260040161042c906116ac565b60405180910390fd5b61044985610441610ee2565b858403610ee6565b506001949350505050565b601290565b60006103ac610466610ee2565b848460016000610474610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104a89190611948565b610ee6565b600260085414156104d05760405162461bcd60e51b815260040161042c9061187e565b600260085560006104df610ee2565b6001600160a01b03811660009081526007602052604090205490915060ff1661051a5760405162461bcd60e51b815260040161042c906117f7565b600954600160a01b900460ff166105435760405162461bcd60e51b815260040161042c906115eb565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610577903390309087906004016113f9565b602060405180830381600087803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190611395565b5050600160085550565b600260085414156105f65760405162461bcd60e51b815260040161042c9061187e565b6002600855600954600160a01b900460ff166106245760405162461bcd60e51b815260040161042c906115eb565b600061062e6103b5565b6009546040516370a0823160e01b815291925060009183916001600160a01b0316906370a08231906106649030906004016113e5565b60206040518083038186803b15801561067c57600080fd5b505afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906113cd565b6106be9190611985565b905060006106cc82856119a5565b90506106d833856110c4565b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061070a903390859060040161141d565b602060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190611395565b50506001600855505050565b6001600160a01b031660009081526020819052604090205490565b61078b610ee2565b6001600160a01b031661079c6107dd565b6001600160a01b0316146107c25760405162461bcd60e51b815260040161042c906116f4565b6107cc60006111b5565b565b6009546001600160a01b031681565b6005546001600160a01b031690565b606060048054610315906119db565b6000610805610ee2565b6001600160a01b03811660009081526007602052604090205490915060ff166108405760405162461bcd60e51b815260040161042c906117f7565b6001600160a01b0382166108665760405162461bcd60e51b815260040161042c906115a1565b6001600160a01b03821660009081526007602052604090205460ff161561089f5760405162461bcd60e51b815260040161042c90611729565b6001600160a01b038216600081815260076020526040808220805460ff191660019081179091556006805480830182559084527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319168517905590519092917f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d91a35050565b60076020526000908152604090205460ff1681565b60008060016000610954610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156109a05760405162461bcd60e51b815260040161042c906118b5565b6109b46109ab610ee2565b85858403610ee6565b5060019392505050565b600260085414156109e15760405162461bcd60e51b815260040161042c9061187e565b6002600855600954600160a01b900460ff16610a0f5760405162461bcd60e51b815260040161042c906115eb565b6009546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a409030906004016113e5565b60206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9091906113cd565b90506000610a9c6103b5565b9050801580610aa9575081155b15610abd57610ab83384611207565b610ae6565b6000610ac98383611985565b90506000610ad782866119a5565b9050610ae33382611207565b50505b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610b1a903390309088906004016113f9565b602060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190611395565b505060016008555050565b60006103ac610b84610ee2565b8484610f9a565b6000610b95610ee2565b6001600160a01b03811660009081526007602052604090205490915060ff16610bd05760405162461bcd60e51b815260040161042c906117f7565b6001600160a01b03821660009081526007602052604090205460ff16610c085760405162461bcd60e51b815260040161042c90611668565b6001600160a01b0382166000908152600760205260408120805460ff191690555b60065460ff82161015610da757826001600160a01b031660068260ff1681548110610c6457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610d95576006610c8c826001611960565b60ff1681548110610cad57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600680546001600160a01b039092169160ff8416908110610cea57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480610d3757634e487b7160e01b600052603160045260246000fd5b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038516907f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d908390a350610da9565b80610d9f81611a16565b915050610c29565b505b5050565b610db5610ee2565b6001600160a01b0316610dc66107dd565b6001600160a01b031614610dec5760405162461bcd60e51b815260040161042c906116f4565b6009805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60068181548110610e5757600080fd5b6000918252602090912001546001600160a01b0316905081565b610e79610ee2565b6001600160a01b0316610e8a6107dd565b6001600160a01b031614610eb05760405162461bcd60e51b815260040161042c906116f4565b6001600160a01b038116610ed65760405162461bcd60e51b815260040161042c90611519565b610edf816111b5565b50565b3390565b6001600160a01b038316610f0c5760405162461bcd60e51b815260040161042c9061183a565b6001600160a01b038216610f325760405162461bcd60e51b815260040161042c9061155f565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f8d908590611931565b60405180910390a3505050565b6001600160a01b038316610fc05760405162461bcd60e51b815260040161042c906117b2565b6001600160a01b038216610fe65760405162461bcd60e51b815260040161042c90611494565b610ff1838383610da7565b6001600160a01b0383166000908152602081905260409020548181101561102a5760405162461bcd60e51b815260040161042c90611622565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611061908490611948565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110ab9190611931565b60405180910390a36110be848484610da7565b50505050565b6001600160a01b0382166110ea5760405162461bcd60e51b815260040161042c90611771565b6110f682600083610da7565b6001600160a01b0382166000908152602081905260409020548181101561112f5760405162461bcd60e51b815260040161042c906114d7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061115e9084906119c4565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111a1908690611931565b60405180910390a3610da783600084610da7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661122d5760405162461bcd60e51b815260040161042c906118fa565b61123960008383610da7565b806002600082825461124b9190611948565b90915550506001600160a01b03821660009081526020819052604081208054839290611278908490611948565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112bb908590611931565b60405180910390a3610da960008383610da7565b6000602082840312156112e0578081fd5b81356112eb81611a4c565b9392505050565b60008060408385031215611304578081fd5b823561130f81611a4c565b9150602083013561131f81611a4c565b809150509250929050565b60008060006060848603121561133e578081fd5b833561134981611a4c565b9250602084013561135981611a4c565b929592945050506040919091013590565b6000806040838503121561137c578182fd5b823561138781611a4c565b946020939093013593505050565b6000602082840312156113a6578081fd5b815180151581146112eb578182fd5b6000602082840312156113c6578081fd5b5035919050565b6000602082840312156113de578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561146d57858101830151858201604001528201611451565b8181111561147e5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602a908201527f4f70657261626c653a206e6577206f70657261746f7220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526019908201527f7374616b696e6720686173206e6f742079657420626567756e00000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526024908201527f4f70657261626c653a2061646472657373206973206e6f7420616e206f70657260408201526330ba37b960e11b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526028908201527f4f70657261626c653a206164647265737320697320616c726561647920616e2060408201526737b832b930ba37b960c11b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f4f70657261746f723a2063616c6c6572206973206e6f7420616e206f706572616040820152623a37b960e91b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561195b5761195b611a36565b500190565b600060ff821660ff84168060ff0382111561197d5761197d611a36565b019392505050565b6000826119a057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156119bf576119bf611a36565b500290565b6000828210156119d6576119d6611a36565b500390565b6002810460018216806119ef57607f821691505b60208210811415611a1057634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff821660ff811415611a2d57611a2d611a36565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610edf57600080fdfea2646970667358221220ddc5bd55d463c6af8e00b99fda7bbd421bcf02b9d78a873821afd00a379bea6064736f6c63430008000033",
    "deployedBytecode": "608060405234801561001057600080fd5b506004361061014d5760003560e01c80638da5cb5b116100c3578063a9059cbb1161007c578063a9059cbb14610294578063ac8a584a146102a7578063c4d66de8146102ba578063dd62ed3e146102cd578063e28d4906146102e0578063f2fde38b146102f35761014d565b80638da5cb5b1461023857806395d89b41146102405780639870d7fe146102485780639a3073911461025b578063a457c2d71461026e578063a59f3e0c146102815761014d565b8063395093511161011557806339509351146101cd57806357f96501146101e057806367dfd4c9146101f557806370a0823114610208578063715018a61461021b578063815b7a8c146102235761014d565b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019057806323b872dd146101a5578063313ce567146101b8575b600080fd5b61015a610306565b6040516101679190611441565b60405180910390f35b61018361017e36600461136a565b610398565b6040516101679190611436565b6101986103b5565b6040516101679190611931565b6101836101b336600461132a565b6103bb565b6101c0610454565b604051610167919061193a565b6101836101db36600461136a565b610459565b6101f36101ee3660046113b5565b6104ad565b005b6101f36102033660046113b5565b6105d3565b6101986102163660046112cf565b610768565b6101f3610783565b61022b6107ce565b60405161016791906113e5565b61022b6107dd565b61015a6107ec565b6101f36102563660046112cf565b6107fb565b6101836102693660046112cf565b610930565b61018361027c36600461136a565b610945565b6101f361028f3660046113b5565b6109be565b6101836102a236600461136a565b610b77565b6101f36102b53660046112cf565b610b8b565b6101f36102c83660046112cf565b610dad565b6101986102db3660046112f2565b610e1c565b61022b6102ee3660046113b5565b610e47565b6101f36103013660046112cf565b610e71565b606060038054610315906119db565b80601f0160208091040260200160405190810160405280929190818152602001828054610341906119db565b801561038e5780601f106103635761010080835404028352916020019161038e565b820191906000526020600020905b81548152906001019060200180831161037157829003601f168201915b5050505050905090565b60006103ac6103a5610ee2565b8484610ee6565b50600192915050565b60025490565b60006103c8848484610f9a565b6001600160a01b0384166000908152600160205260408120816103e9610ee2565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156104355760405162461bcd60e51b815260040161042c906116ac565b60405180910390fd5b61044985610441610ee2565b858403610ee6565b506001949350505050565b601290565b60006103ac610466610ee2565b848460016000610474610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546104a89190611948565b610ee6565b600260085414156104d05760405162461bcd60e51b815260040161042c9061187e565b600260085560006104df610ee2565b6001600160a01b03811660009081526007602052604090205490915060ff1661051a5760405162461bcd60e51b815260040161042c906117f7565b600954600160a01b900460ff166105435760405162461bcd60e51b815260040161042c906115eb565b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610577903390309087906004016113f9565b602060405180830381600087803b15801561059157600080fd5b505af11580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c99190611395565b5050600160085550565b600260085414156105f65760405162461bcd60e51b815260040161042c9061187e565b6002600855600954600160a01b900460ff166106245760405162461bcd60e51b815260040161042c906115eb565b600061062e6103b5565b6009546040516370a0823160e01b815291925060009183916001600160a01b0316906370a08231906106649030906004016113e5565b60206040518083038186803b15801561067c57600080fd5b505afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b491906113cd565b6106be9190611985565b905060006106cc82856119a5565b90506106d833856110c4565b60095460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061070a903390859060040161141d565b602060405180830381600087803b15801561072457600080fd5b505af1158015610738573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075c9190611395565b50506001600855505050565b6001600160a01b031660009081526020819052604090205490565b61078b610ee2565b6001600160a01b031661079c6107dd565b6001600160a01b0316146107c25760405162461bcd60e51b815260040161042c906116f4565b6107cc60006111b5565b565b6009546001600160a01b031681565b6005546001600160a01b031690565b606060048054610315906119db565b6000610805610ee2565b6001600160a01b03811660009081526007602052604090205490915060ff166108405760405162461bcd60e51b815260040161042c906117f7565b6001600160a01b0382166108665760405162461bcd60e51b815260040161042c906115a1565b6001600160a01b03821660009081526007602052604090205460ff161561089f5760405162461bcd60e51b815260040161042c90611729565b6001600160a01b038216600081815260076020526040808220805460ff191660019081179091556006805480830182559084527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319168517905590519092917f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d91a35050565b60076020526000908152604090205460ff1681565b60008060016000610954610ee2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156109a05760405162461bcd60e51b815260040161042c906118b5565b6109b46109ab610ee2565b85858403610ee6565b5060019392505050565b600260085414156109e15760405162461bcd60e51b815260040161042c9061187e565b6002600855600954600160a01b900460ff16610a0f5760405162461bcd60e51b815260040161042c906115eb565b6009546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610a409030906004016113e5565b60206040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9091906113cd565b90506000610a9c6103b5565b9050801580610aa9575081155b15610abd57610ab83384611207565b610ae6565b6000610ac98383611985565b90506000610ad782866119a5565b9050610ae33382611207565b50505b6009546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610b1a903390309088906004016113f9565b602060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6c9190611395565b505060016008555050565b60006103ac610b84610ee2565b8484610f9a565b6000610b95610ee2565b6001600160a01b03811660009081526007602052604090205490915060ff16610bd05760405162461bcd60e51b815260040161042c906117f7565b6001600160a01b03821660009081526007602052604090205460ff16610c085760405162461bcd60e51b815260040161042c90611668565b6001600160a01b0382166000908152600760205260408120805460ff191690555b60065460ff82161015610da757826001600160a01b031660068260ff1681548110610c6457634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610d95576006610c8c826001611960565b60ff1681548110610cad57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154600680546001600160a01b039092169160ff8416908110610cea57634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506006805480610d3757634e487b7160e01b600052603160045260246000fd5b600082815260208120820160001990810180546001600160a01b03191690559091019091556040516001600160a01b038516907f966c160e1c4dbc7df8d69af4ace01e9297c3cf016397b7914971f2fbfa32672d908390a350610da9565b80610d9f81611a16565b915050610c29565b505b5050565b610db5610ee2565b6001600160a01b0316610dc66107dd565b6001600160a01b031614610dec5760405162461bcd60e51b815260040161042c906116f4565b6009805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60068181548110610e5757600080fd5b6000918252602090912001546001600160a01b0316905081565b610e79610ee2565b6001600160a01b0316610e8a6107dd565b6001600160a01b031614610eb05760405162461bcd60e51b815260040161042c906116f4565b6001600160a01b038116610ed65760405162461bcd60e51b815260040161042c90611519565b610edf816111b5565b50565b3390565b6001600160a01b038316610f0c5760405162461bcd60e51b815260040161042c9061183a565b6001600160a01b038216610f325760405162461bcd60e51b815260040161042c9061155f565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610f8d908590611931565b60405180910390a3505050565b6001600160a01b038316610fc05760405162461bcd60e51b815260040161042c906117b2565b6001600160a01b038216610fe65760405162461bcd60e51b815260040161042c90611494565b610ff1838383610da7565b6001600160a01b0383166000908152602081905260409020548181101561102a5760405162461bcd60e51b815260040161042c90611622565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611061908490611948565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110ab9190611931565b60405180910390a36110be848484610da7565b50505050565b6001600160a01b0382166110ea5760405162461bcd60e51b815260040161042c90611771565b6110f682600083610da7565b6001600160a01b0382166000908152602081905260409020548181101561112f5760405162461bcd60e51b815260040161042c906114d7565b6001600160a01b038316600090815260208190526040812083830390556002805484929061115e9084906119c4565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906111a1908690611931565b60405180910390a3610da783600084610da7565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661122d5760405162461bcd60e51b815260040161042c906118fa565b61123960008383610da7565b806002600082825461124b9190611948565b90915550506001600160a01b03821660009081526020819052604081208054839290611278908490611948565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112bb908590611931565b60405180910390a3610da960008383610da7565b6000602082840312156112e0578081fd5b81356112eb81611a4c565b9392505050565b60008060408385031215611304578081fd5b823561130f81611a4c565b9150602083013561131f81611a4c565b809150509250929050565b60008060006060848603121561133e578081fd5b833561134981611a4c565b9250602084013561135981611a4c565b929592945050506040919091013590565b6000806040838503121561137c578182fd5b823561138781611a4c565b946020939093013593505050565b6000602082840312156113a6578081fd5b815180151581146112eb578182fd5b6000602082840312156113c6578081fd5b5035919050565b6000602082840312156113de578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561146d57858101830151858201604001528201611451565b8181111561147e5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252602a908201527f4f70657261626c653a206e6577206f70657261746f7220697320746865207a65604082015269726f206164647265737360b01b606082015260800190565b60208082526019908201527f7374616b696e6720686173206e6f742079657420626567756e00000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526024908201527f4f70657261626c653a2061646472657373206973206e6f7420616e206f70657260408201526330ba37b960e11b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526028908201527f4f70657261626c653a206164647265737320697320616c726561647920616e2060408201526737b832b930ba37b960c11b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526023908201527f4f70657261746f723a2063616c6c6572206973206e6f7420616e206f706572616040820152623a37b960e91b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b6000821982111561195b5761195b611a36565b500190565b600060ff821660ff84168060ff0382111561197d5761197d611a36565b019392505050565b6000826119a057634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156119bf576119bf611a36565b500290565b6000828210156119d6576119d6611a36565b500390565b6002810460018216806119ef57607f821691505b60208210811415611a1057634e487b7160e01b600052602260045260246000fd5b50919050565b600060ff821660ff811415611a2d57611a2d611a36565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610edf57600080fdfea2646970667358221220ddc5bd55d463c6af8e00b99fda7bbd421bcf02b9d78a873821afd00a379bea6064736f6c63430008000033",
    "sourceMap": "618:2288:0:-:0;;;;;;;;;;;;-1:-1:-1;1896:113:4;;;;;;;;;;;-1:-1:-1;;;1896:113:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:4;;;;1962:13;;1896:113;;;1962:13;;:5;;:13;:::i;:::-;-1:-1:-1;1985:17:4;;;;:7;;:17;;;;;:::i;:::-;;1896:113;;867:23:2;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;680:17:1;700:12;:10;:12::i;:::-;-1:-1:-1;;;;;722:19:1;;;;;;:8;:19;;;;;;:26;;-1:-1:-1;;722:26:1;744:4;722:26;;;;;;758:9;:25;;;;;;;;;;;;;;-1:-1:-1;;;;;;758:25:1;;;;;798:32;;680;;-1:-1:-1;744:4:1;798:32;;722:19;798:32;-1:-1:-1;1637:1:3;1742:7;:22;618:2288:0;;586:96:7;665:10;586:96;:::o;2041:169:2:-;2115:6;;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;618:2288:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;618:2288:0;;;-1:-1:-1;618:2288:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:8;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;618:2288:0;;;;;;",
    "deployedSourceMap": "618:2288:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4171:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3162:106::-;;;:::i;:::-;;;;;;;:::i;4804:478::-;;;;;;:::i;:::-;;:::i;3011:91::-;;;:::i;:::-;;;;;;;:::i;5677:212::-;;;;;;:::i;:::-;;:::i;2661:242:0:-;;;;;;:::i;:::-;;:::i;:::-;;2089:450;;;;;;:::i;:::-;;:::i;3326:125:4:-;;;;;;:::i;:::-;;:::i;1605:92:2:-;;;:::i;703:18:0:-;;;:::i;:::-;;;;;;;:::i;973:85:2:-;;;:::i;2285:102:4:-;;;:::i;1895:376:1:-;;;;;;:::i;:::-;;:::i;534:40::-;;;;;;:::i;:::-;;:::i;6376:405:4:-;;;;;;:::i;:::-;;:::i;995:984:0:-;;;;;;:::i;:::-;;:::i;3654:172:4:-;;;;;;:::i;:::-;;:::i;1269:508:1:-;;;;;;:::i;:::-;;:::i;832:112:0:-;;;;;;:::i;:::-;;:::i;3884:149:4:-;;;;;;:::i;:::-;;:::i;502:26:1:-;;;;;;:::i;:::-;;:::i;1846:189:2:-;;;;;;:::i;:::-;;:::i;2074:98:4:-;2128:13;2160:5;2153:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:98;:::o;4171:166::-;4254:4;4270:39;4279:12;:10;:12::i;:::-;4293:7;4302:6;4270:8;:39::i;:::-;-1:-1:-1;4326:4:4;4171:166;;;;:::o;3162:106::-;3249:12;;3162:106;:::o;4804:478::-;4940:4;4956:36;4966:6;4974:9;4985:6;4956:9;:36::i;:::-;-1:-1:-1;;;;;5030:19:4;;5003:24;5030:19;;;:11;:19;;;;;5003:24;5050:12;:10;:12::i;:::-;-1:-1:-1;;;;;5030:33:4;-1:-1:-1;;;;;5030:33:4;;;;;;;;;;;;;5003:60;;5101:6;5081:16;:26;;5073:79;;;;-1:-1:-1;;;5073:79:4;;;;;;;:::i;:::-;;;;;;;;;5186:57;5195:6;5203:12;:10;:12::i;:::-;5236:6;5217:16;:25;5186:8;:57::i;:::-;-1:-1:-1;5271:4:4;;4804:478;-1:-1:-1;;;;4804:478:4:o;3011:91::-;3093:2;3011:91;:::o;5677:212::-;5765:4;5781:80;5790:12;:10;:12::i;:::-;5804:7;5850:10;5813:11;:25;5825:12;:10;:12::i;:::-;-1:-1:-1;;;;;5813:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;5813:25:4;;;:34;;;;;;;;;;:47;;;;:::i;:::-;5781:8;:80::i;2661:242:0:-;1680:1:3;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:3;;;;;;;:::i;:::-;1680:1;2389:7;:18;962:17:1::1;982:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;1012:19:1;::::1;;::::0;;;:8:::1;:19;::::0;;;;;962:32;;-1:-1:-1;1012:19:1::1;;1004:67;;;;-1:-1:-1::0;;;1004:67:1::1;;;;;;;:::i;:::-;2748:13:0::2;::::0;-1:-1:-1;;;2748:13:0;::::2;;;2740:51;;;;-1:-1:-1::0;;;2740:51:0::2;;;;;;;:::i;:::-;2843:4;::::0;:53:::2;::::0;-1:-1:-1;;;2843:53:0;;-1:-1:-1;;;;;2843:4:0;;::::2;::::0;:17:::2;::::0;:53:::2;::::0;2861:10:::2;::::0;2881:4:::2;::::0;2888:7;;2843:53:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;1637:1:3;2562:7;:22;-1:-1:-1;2661:242:0:o;2089:450::-;1680:1:3;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:3;;;;;;;:::i;:::-;1680:1;2389:7;:18;2159:13:0::1;::::0;-1:-1:-1;;;2159:13:0;::::1;;;2151:51;;;;-1:-1:-1::0;;;2151:51:0::1;;;;;;;:::i;:::-;2254:15;2272:13;:11;:13::i;:::-;2364:4;::::0;:29:::1;::::0;-1:-1:-1;;;2364:29:0;;2254:31;;-1:-1:-1;2347:14:0::1;::::0;2254:31;;-1:-1:-1;;;;;2364:4:0::1;::::0;:14:::1;::::0;:29:::1;::::0;2387:4:::1;::::0;2364:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;;:::i;:::-;2347:59:::0;-1:-1:-1;2416:12:0::1;2431:20;2347:59:::0;2431:8;:20:::1;:::i;:::-;2416:35;;2461:27;2467:10;2479:8;2461:5;:27::i;:::-;2498:4;::::0;:34:::1;::::0;-1:-1:-1;;;2498:34:0;;-1:-1:-1;;;;;2498:4:0;;::::1;::::0;:13:::1;::::0;:34:::1;::::0;2512:10:::1;::::0;2524:7;;2498:34:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;1637:1:3;2562:7;:22;-1:-1:-1;;;2089:450:0:o;3326:125:4:-;-1:-1:-1;;;;;3426:18:4;3400:7;3426:18;;;;;;;;;;;;3326:125::o;1605:92:2:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;703:18:0:-;;;-1:-1:-1;;;;;703:18:0;;:::o;973:85:2:-;1045:6;;-1:-1:-1;;;;;1045:6:2;973:85;:::o;2285:102:4:-;2341:13;2373:7;2366:14;;;;;:::i;1895:376:1:-;962:17;982:12;:10;:12::i;:::-;-1:-1:-1;;;;;1012:19:1;;;;;;:8;:19;;;;;;962:32;;-1:-1:-1;1012:19:1;;1004:67;;;;-1:-1:-1;;;1004:67:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1983:25:1;::::1;1975:80;;;;-1:-1:-1::0;;;1975:80:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2074:21:1;::::1;;::::0;;;:8:::1;:21;::::0;;;;;::::1;;2073:22;2065:75;;;;-1:-1:-1::0;;;2065:75:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2150:21:1;::::1;;::::0;;;:8:::1;:21;::::0;;;;;:28;;-1:-1:-1;;2150:28:1::1;2174:4;2150:28:::0;;::::1;::::0;;;2188:9:::1;:27:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;2188:27:1::1;::::0;::::1;::::0;;2230:34;;2174:4;;2150:21;2230:34:::1;::::0;::::1;1895:376:::0;;:::o;534:40::-;;;;;;;;;;;;;;;:::o;6376:405:4:-;6469:4;6485:24;6512:11;:25;6524:12;:10;:12::i;:::-;-1:-1:-1;;;;;6512:25:4;;;;;;;;;;;;;;;;;-1:-1:-1;6512:25:4;;;:34;;;;;;;;;;;-1:-1:-1;6564:35:4;;;;6556:85;;;;-1:-1:-1;;;6556:85:4;;;;;;;:::i;:::-;6675:67;6684:12;:10;:12::i;:::-;6698:7;6726:15;6707:16;:34;6675:8;:67::i;:::-;-1:-1:-1;6770:4:4;;6376:405;-1:-1:-1;;;6376:405:4:o;995:984:0:-;1680:1:3;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:3;;;;;;;:::i;:::-;1680:1;2389:7;:18;1064:13:0::1;::::0;-1:-1:-1;;;1064:13:0;::::1;;;1056:51;;;;-1:-1:-1::0;;;1056:51:0::1;;;;;;;:::i;:::-;1182:4;::::0;:29:::1;::::0;-1:-1:-1;;;1182:29:0;;1165:14:::1;::::0;-1:-1:-1;;;;;1182:4:0::1;::::0;:14:::1;::::0;:29:::1;::::0;1205:4:::1;::::0;1182:29:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1165:46;;1265:15;1283:13;:11;:13::i;:::-;1265:31:::0;-1:-1:-1;1375:15:0;;;:33:::1;;-1:-1:-1::0;1394:14:0;;1375:33:::1;1371:497;;;1412:26;1418:10;1430:7;1412:5;:26::i;:::-;1371:497;;;1681:14;1698:22;1711:9:::0;1698:10;:22:::1;:::i;:::-;1681:39:::0;-1:-1:-1;1781:13:0::1;1797:19;1681:39:::0;1797:7;:19:::1;:::i;:::-;1781:35;;1830:27;1836:10;1848:8;1830:5;:27::i;:::-;1371:497;;;1919:4;::::0;:53:::1;::::0;-1:-1:-1;;;1919:53:0;;-1:-1:-1;;;;;1919:4:0;;::::1;::::0;:17:::1;::::0;:53:::1;::::0;1937:10:::1;::::0;1957:4:::1;::::0;1964:7;;1919:53:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;1637:1:3;2562:7;:22;-1:-1:-1;;995:984:0:o;3654:172:4:-;3740:4;3756:42;3766:12;:10;:12::i;:::-;3780:9;3791:6;3756:9;:42::i;1269:508:1:-;962:17;982:12;:10;:12::i;:::-;-1:-1:-1;;;;;1012:19:1;;;;;;:8;:19;;;;;;962:32;;-1:-1:-1;1012:19:1;;1004:67;;;;-1:-1:-1;;;1004:67:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;1365:26:1;::::1;;::::0;;;:8:::1;:26;::::0;;;;;::::1;;1357:75;;;;-1:-1:-1::0;;;1357:75:1::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1442:26:1;::::1;1471:5;1442:26:::0;;;:8:::1;:26;::::0;;;;:34;;-1:-1:-1;;1442:34:1::1;::::0;;1486:285:::1;1504:9;:16:::0;1500:20:::1;::::0;::::1;;1486:285;;;1561:16;-1:-1:-1::0;;;;;1545:32:1::1;:9;1555:1;1545:12;;;;;;;;-1:-1:-1::0;;;1545:12:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;1545:12:1::1;:32;1541:220;;;1612:9;1622:3;:1:::0;1624::::1;1622:3;:::i;:::-;1612:14;;;;;;;;-1:-1:-1::0;;;1612:14:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;1597:9:::1;:12:::0;;-1:-1:-1;;;;;1612:14:1;;::::1;::::0;1597:12:::1;::::0;::::1;::::0;;::::1;;;-1:-1:-1::0;;;1597:12:1::1;;;;;;;;;;;;;;;;;:29;;;;;-1:-1:-1::0;;;;;1597:29:1::1;;;;;-1:-1:-1::0;;;;;1597:29:1::1;;;;;;1644:9;:15;;;;;-1:-1:-1::0;;;1644:15:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;;-1:-1:-1;;1644:15:1;;;;;-1:-1:-1;;;;;;1644:15:1::1;::::0;;;;;;;;1682:40:::1;::::0;-1:-1:-1;;;;;1682:40:1;::::1;::::0;::::1;::::0;1644:15;;1682:40:::1;1740:7;;;1541:220;1522:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1486:285;;;;1081:1;1269:508:::0;;:::o;832:112:0:-;1196:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;895:4:0::1;:12:::0;;-1:-1:-1;;;;;;;;;895:12:0;;::::1;-1:-1:-1::0;;;;;;895:12:0;;::::1;;917:20:::0;;;::::1;-1:-1:-1::0;;;917:20:0::1;::::0;;832:112::o;3884:149:4:-;-1:-1:-1;;;;;3999:18:4;;;3973:7;3999:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3884:149::o;502:26:1:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;502:26:1;;-1:-1:-1;502:26:1;:::o;1846:189:2:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:2::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;586:96:7:-;665:10;586:96;:::o;9952:370:4:-;-1:-1:-1;;;;;10083:19:4;;10075:68;;;;-1:-1:-1;;;10075:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10161:21:4;;10153:68;;;;-1:-1:-1;;;10153:68:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;10232:18:4;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10283:32;;;;;10262:6;;10283:32;:::i;:::-;;;;;;;;9952:370;;;:::o;7255:713::-;-1:-1:-1;;;;;7390:20:4;;7382:70;;;;-1:-1:-1;;;7382:70:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7470:23:4;;7462:71;;;;-1:-1:-1;;;7462:71:4;;;;;;;:::i;:::-;7544:47;7565:6;7573:9;7584:6;7544:20;:47::i;:::-;-1:-1:-1;;;;;7626:17:4;;7602:21;7626:17;;;;;;;;;;;7661:23;;;;7653:74;;;;-1:-1:-1;;;7653:74:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;7761:17:4;;;:9;:17;;;;;;;;;;;7781:22;;;7761:42;;7823:20;;;;;;;;:30;;7797:6;;7761:9;7823:30;;7797:6;;7823:30;:::i;:::-;;;;;;;;7886:9;-1:-1:-1;;;;;7869:35:4;7878:6;-1:-1:-1;;;;;7869:35:4;;7897:6;7869:35;;;;;;:::i;:::-;;;;;;;;7915:46;7935:6;7943:9;7954:6;7915:19;:46::i;:::-;7255:713;;;;:::o;8953:576::-;-1:-1:-1;;;;;9036:21:4;;9028:67;;;;-1:-1:-1;;;9028:67:4;;;;;;;:::i;:::-;9106:49;9127:7;9144:1;9148:6;9106:20;:49::i;:::-;-1:-1:-1;;;;;9191:18:4;;9166:22;9191:18;;;;;;;;;;;9227:24;;;;9219:71;;;;-1:-1:-1;;;9219:71:4;;;;;;;:::i;:::-;-1:-1:-1;;;;;9324:18:4;;:9;:18;;;;;;;;;;9345:23;;;9324:44;;9388:12;:22;;9362:6;;9324:9;9388:22;;9362:6;;9388:22;:::i;:::-;;;;-1:-1:-1;;9426:37:4;;9452:1;;-1:-1:-1;;;;;9426:37:4;;;;;;;9456:6;;9426:37;:::i;:::-;;;;;;;;9474:48;9494:7;9511:1;9515:6;9474:19;:48::i;2041:169:2:-;2115:6;;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;8244:389:4:-;-1:-1:-1;;;;;8327:21:4;;8319:65;;;;-1:-1:-1;;;8319:65:4;;;;;;;:::i;:::-;8395:49;8424:1;8428:7;8437:6;8395:20;:49::i;:::-;8471:6;8455:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8487:18:4;;:9;:18;;;;;;;;;;:28;;8509:6;;8487:9;:28;;8509:6;;8487:28;:::i;:::-;;;;-1:-1:-1;;8530:37:4;;-1:-1:-1;;;;;8530:37:4;;;8547:1;;8530:37;;;;8560:6;;8530:37;:::i;:::-;;;;;;;;8578:48;8606:1;8610:7;8619:6;8578:19;:48::i;14:259:8:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;:::-;262:5;84:189;-1:-1:-1;;;84:189:8:o;278:402::-;;;407:2;395:9;386:7;382:23;378:32;375:2;;;428:6;420;413:22;375:2;472:9;459:23;491:33;518:5;491:33;:::i;:::-;543:5;-1:-1:-1;600:2:8;585:18;;572:32;613:35;572:32;613:35;:::i;:::-;667:7;657:17;;;365:315;;;;;:::o;685:470::-;;;;831:2;819:9;810:7;806:23;802:32;799:2;;;852:6;844;837:22;799:2;896:9;883:23;915:33;942:5;915:33;:::i;:::-;967:5;-1:-1:-1;1024:2:8;1009:18;;996:32;1037:35;996:32;1037:35;:::i;:::-;789:366;;1091:7;;-1:-1:-1;;;1145:2:8;1130:18;;;;1117:32;;789:366::o;1160:327::-;;;1289:2;1277:9;1268:7;1264:23;1260:32;1257:2;;;1310:6;1302;1295:22;1257:2;1354:9;1341:23;1373:33;1400:5;1373:33;:::i;:::-;1425:5;1477:2;1462:18;;;;1449:32;;-1:-1:-1;;;1247:240:8:o;1492:297::-;;1612:2;1600:9;1591:7;1587:23;1583:32;1580:2;;;1633:6;1625;1618:22;1580:2;1670:9;1664:16;1723:5;1716:13;1709:21;1702:5;1699:32;1689:2;;1750:6;1742;1735:22;2073:190;;2185:2;2173:9;2164:7;2160:23;2156:32;2153:2;;;2206:6;2198;2191:22;2153:2;-1:-1:-1;2234:23:8;;2143:120;-1:-1:-1;2143:120:8:o;2268:194::-;;2391:2;2379:9;2370:7;2366:23;2362:32;2359:2;;;2412:6;2404;2397:22;2359:2;-1:-1:-1;2440:16:8;;2349:113;-1:-1:-1;2349:113:8:o;2467:203::-;-1:-1:-1;;;;;2631:32:8;;;;2613:51;;2601:2;2586:18;;2568:102::o;2675:375::-;-1:-1:-1;;;;;2933:15:8;;;2915:34;;2985:15;;;;2980:2;2965:18;;2958:43;3032:2;3017:18;;3010:34;;;;2865:2;2850:18;;2832:218::o;3055:274::-;-1:-1:-1;;;;;3247:32:8;;;;3229:51;;3311:2;3296:18;;3289:34;3217:2;3202:18;;3184:145::o;3334:187::-;3499:14;;3492:22;3474:41;;3462:2;3447:18;;3429:92::o;3749:603::-;;3890:2;3919;3908:9;3901:21;3951:6;3945:13;3994:6;3989:2;3978:9;3974:18;3967:34;4019:4;4032:140;4046:6;4043:1;4040:13;4032:140;;;4141:14;;;4137:23;;4131:30;4107:17;;;4126:2;4103:26;4096:66;4061:10;;4032:140;;;4190:6;4187:1;4184:13;4181:2;;;4260:4;4255:2;4246:6;4235:9;4231:22;4227:31;4220:45;4181:2;-1:-1:-1;4336:2:8;4315:15;-1:-1:-1;;4311:29:8;4296:45;;;;4343:2;4292:54;;3870:482;-1:-1:-1;;;3870:482:8:o;4357:399::-;4559:2;4541:21;;;4598:2;4578:18;;;4571:30;4637:34;4632:2;4617:18;;4610:62;-1:-1:-1;;;4703:2:8;4688:18;;4681:33;4746:3;4731:19;;4531:225::o;4761:398::-;4963:2;4945:21;;;5002:2;4982:18;;;4975:30;5041:34;5036:2;5021:18;;5014:62;-1:-1:-1;;;5107:2:8;5092:18;;5085:32;5149:3;5134:19;;4935:224::o;5164:402::-;5366:2;5348:21;;;5405:2;5385:18;;;5378:30;5444:34;5439:2;5424:18;;5417:62;-1:-1:-1;;;5510:2:8;5495:18;;5488:36;5556:3;5541:19;;5338:228::o;5571:398::-;5773:2;5755:21;;;5812:2;5792:18;;;5785:30;5851:34;5846:2;5831:18;;5824:62;-1:-1:-1;;;5917:2:8;5902:18;;5895:32;5959:3;5944:19;;5745:224::o;5974:406::-;6176:2;6158:21;;;6215:2;6195:18;;;6188:30;6254:34;6249:2;6234:18;;6227:62;-1:-1:-1;;;6320:2:8;6305:18;;6298:40;6370:3;6355:19;;6148:232::o;6385:349::-;6587:2;6569:21;;;6626:2;6606:18;;;6599:30;6665:27;6660:2;6645:18;;6638:55;6725:2;6710:18;;6559:175::o;6739:402::-;6941:2;6923:21;;;6980:2;6960:18;;;6953:30;7019:34;7014:2;6999:18;;6992:62;-1:-1:-1;;;7085:2:8;7070:18;;7063:36;7131:3;7116:19;;6913:228::o;7146:400::-;7348:2;7330:21;;;7387:2;7367:18;;;7360:30;7426:34;7421:2;7406:18;;7399:62;-1:-1:-1;;;7492:2:8;7477:18;;7470:34;7536:3;7521:19;;7320:226::o;7551:404::-;7753:2;7735:21;;;7792:2;7772:18;;;7765:30;7831:34;7826:2;7811:18;;7804:62;-1:-1:-1;;;7897:2:8;7882:18;;7875:38;7945:3;7930:19;;7725:230::o;7960:356::-;8162:2;8144:21;;;8181:18;;;8174:30;8240:34;8235:2;8220:18;;8213:62;8307:2;8292:18;;8134:182::o;8321:404::-;8523:2;8505:21;;;8562:2;8542:18;;;8535:30;8601:34;8596:2;8581:18;;8574:62;-1:-1:-1;;;8667:2:8;8652:18;;8645:38;8715:3;8700:19;;8495:230::o;8730:397::-;8932:2;8914:21;;;8971:2;8951:18;;;8944:30;9010:34;9005:2;8990:18;;8983:62;-1:-1:-1;;;9076:2:8;9061:18;;9054:31;9117:3;9102:19;;8904:223::o;9132:401::-;9334:2;9316:21;;;9373:2;9353:18;;;9346:30;9412:34;9407:2;9392:18;;9385:62;-1:-1:-1;;;9478:2:8;9463:18;;9456:35;9523:3;9508:19;;9306:227::o;9538:399::-;9740:2;9722:21;;;9779:2;9759:18;;;9752:30;9818:34;9813:2;9798:18;;9791:62;-1:-1:-1;;;9884:2:8;9869:18;;9862:33;9927:3;9912:19;;9712:225::o;9942:400::-;10144:2;10126:21;;;10183:2;10163:18;;;10156:30;10222:34;10217:2;10202:18;;10195:62;-1:-1:-1;;;10288:2:8;10273:18;;10266:34;10332:3;10317:19;;10116:226::o;10347:355::-;10549:2;10531:21;;;10588:2;10568:18;;;10561:30;10627:33;10622:2;10607:18;;10600:61;10693:2;10678:18;;10521:181::o;10707:401::-;10909:2;10891:21;;;10948:2;10928:18;;;10921:30;10987:34;10982:2;10967:18;;10960:62;-1:-1:-1;;;11053:2:8;11038:18;;11031:35;11098:3;11083:19;;10881:227::o;11113:355::-;11315:2;11297:21;;;11354:2;11334:18;;;11327:30;11393:33;11388:2;11373:18;;11366:61;11459:2;11444:18;;11287:181::o;11473:177::-;11619:25;;;11607:2;11592:18;;11574:76::o;11655:184::-;11827:4;11815:17;;;;11797:36;;11785:2;11770:18;;11752:87::o;11844:128::-;;11915:1;11911:6;11908:1;11905:13;11902:2;;;11921:18;;:::i;:::-;-1:-1:-1;11957:9:8;;11892:80::o;11977:204::-;;12051:4;12048:1;12044:12;12083:4;12080:1;12076:12;12118:3;12112:4;12108:14;12103:3;12100:23;12097:2;;;12126:18;;:::i;:::-;12162:13;;12023:158;-1:-1:-1;;;12023:158:8:o;12186:217::-;;12252:1;12242:2;;-1:-1:-1;;;12277:31:8;;12331:4;12328:1;12321:15;12359:4;12284:1;12349:15;12242:2;-1:-1:-1;12388:9:8;;12232:171::o;12408:168::-;;12514:1;12510;12506:6;12502:14;12499:1;12496:21;12491:1;12484:9;12477:17;12473:45;12470:2;;;12521:18;;:::i;:::-;-1:-1:-1;12561:9:8;;12460:116::o;12581:125::-;;12649:1;12646;12643:8;12640:2;;;12654:18;;:::i;:::-;-1:-1:-1;12691:9:8;;12630:76::o;12711:380::-;12796:1;12786:12;;12843:1;12833:12;;;12854:2;;12908:4;12900:6;12896:17;12886:27;;12854:2;12961;12953:6;12950:14;12930:18;12927:38;12924:2;;;13007:10;13002:3;12998:20;12995:1;12988:31;13042:4;13039:1;13032:15;13070:4;13067:1;13060:15;12924:2;;12766:325;;;:::o;13096:175::-;;13177:4;13170:5;13166:16;13206:4;13197:7;13194:17;13191:2;;;13214:18;;:::i;:::-;13263:1;13250:15;;13141:130;-1:-1:-1;;13141:130:8:o;13276:127::-;13337:10;13332:3;13328:20;13325:1;13318:31;13368:4;13365:1;13358:15;13392:4;13389:1;13382:15;13408:133;-1:-1:-1;;;;;13485:31:8;;13475:42;;13465:2;;13531:1;13528;13521:12",
    "sourcePath": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/contracts/SpellBound.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/contracts/SpellBound.sol",
        "exportedSymbols": {
            "Context": [
                1171
            ],
            "ERC20": [
                1047
            ],
            "IERC20": [
                1125
            ],
            "IERC20Metadata": [
                1150
            ],
            "Operable": [
                357
            ],
            "Ownable": [
                461
            ],
            "ReentrancyGuard": [
                501
            ],
            "SpellBound": [
                187
            ]
        },
        "id": 188,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "absolutePath": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "file": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 188,
                "sourceUnit": 1126,
                "src": "57:123:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 188,
                "sourceUnit": 1048,
                "src": "181:122:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "file": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 4,
                "nodeType": "ImportDirective",
                "scope": 188,
                "sourceUnit": 502,
                "src": "304:129:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/unico/Documents/GitHub/SoulSwap/soulswap-farms/contracts/libs/Operable.sol",
                "file": "./libs/Operable.sol",
                "id": 5,
                "nodeType": "ImportDirective",
                "scope": 188,
                "sourceUnit": 358,
                "src": "434:29:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "arguments": [
                            {
                                "hexValue": "5370656c6c426f756e64",
                                "id": 7,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "647:12:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8737cb2a1e7f1bdccc9f65a30279afe89f478aebe8bb818d2cdfc114822fa65e",
                                    "typeString": "literal_string \"SpellBound\""
                                },
                                "value": "SpellBound"
                            },
                            {
                                "hexValue": "5350454c4c",
                                "id": 8,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "661:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4e5184e280897f6080343022541e10fceffc046bc996bfbbcdf879d7c39ecf2e",
                                    "typeString": "literal_string \"SPELL\""
                                },
                                "value": "SPELL"
                            }
                        ],
                        "baseName": {
                            "id": 6,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1047,
                            "src": "641:5:0"
                        },
                        "id": 9,
                        "nodeType": "InheritanceSpecifier",
                        "src": "641:28:0"
                    },
                    {
                        "baseName": {
                            "id": 10,
                            "name": "Operable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 357,
                            "src": "671:8:0"
                        },
                        "id": 11,
                        "nodeType": "InheritanceSpecifier",
                        "src": "671:8:0"
                    },
                    {
                        "baseName": {
                            "id": 12,
                            "name": "ReentrancyGuard",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 501,
                            "src": "681:15:0"
                        },
                        "id": 13,
                        "nodeType": "InheritanceSpecifier",
                        "src": "681:15:0"
                    }
                ],
                "contractDependencies": [
                    357,
                    461,
                    501,
                    1047,
                    1125,
                    1150,
                    1171
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 187,
                "linearizedBaseContracts": [
                    187,
                    501,
                    357,
                    461,
                    1047,
                    1150,
                    1125,
                    1171
                ],
                "name": "SpellBound",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "815b7a8c",
                        "id": 16,
                        "mutability": "mutable",
                        "name": "soul",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "703:18:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$1125",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 15,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 14,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1125,
                                "src": "703:6:0"
                            },
                            "referencedDeclaration": 1125,
                            "src": "703:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1125",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 18,
                        "mutability": "mutable",
                        "name": "isInitialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 187,
                        "src": "728:18:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                        },
                        "typeName": {
                            "id": 17,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "728:4:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 34,
                            "nodeType": "Block",
                            "src": "885:59:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 28,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 26,
                                            "name": "soul",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 16,
                                            "src": "895:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1125",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 27,
                                            "name": "_soul",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21,
                                            "src": "902:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$1125",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "895:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1125",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 29,
                                    "nodeType": "ExpressionStatement",
                                    "src": "895:12:0"
                                },
                                {
                                    "expression": {
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 30,
                                            "name": "isInitialized",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 18,
                                            "src": "917:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 31,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "933:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "917:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 33,
                                    "nodeType": "ExpressionStatement",
                                    "src": "917:20:0"
                                }
                            ]
                        },
                        "functionSelector": "c4d66de8",
                        "id": 35,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 24,
                                "modifierName": {
                                    "id": 23,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 404,
                                    "src": "875:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "875:9:0"
                            }
                        ],
                        "name": "initialize",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 22,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 21,
                                    "mutability": "mutable",
                                    "name": "_soul",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 35,
                                    "src": "852:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$1125",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 20,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 19,
                                            "name": "IERC20",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 1125,
                                            "src": "852:6:0"
                                        },
                                        "referencedDeclaration": 1125,
                                        "src": "852:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$1125",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "851:14:0"
                        },
                        "returnParameters": {
                            "id": 25,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "885:0:0"
                        },
                        "scope": 187,
                        "src": "832:112:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 108,
                            "nodeType": "Block",
                            "src": "1046:933:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 43,
                                                "name": "isInitialized",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 18,
                                                "src": "1064:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "7374616b696e6720686173206e6f742079657420626567756e",
                                                "id": 44,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1079:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                },
                                                "value": "staking has not yet begun"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                }
                                            ],
                                            "id": 42,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "1056:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 45,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1056:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 46,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1056:51:0"
                                },
                                {
                                    "assignments": [
                                        48
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 48,
                                            "mutability": "mutable",
                                            "name": "totalSoul",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 108,
                                            "src": "1165:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 47,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1165:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 56,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 53,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1205:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpellBound_$187",
                                                            "typeString": "contract SpellBound"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpellBound_$187",
                                                            "typeString": "contract SpellBound"
                                                        }
                                                    ],
                                                    "id": 52,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1197:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 51,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1197:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 54,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1197:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 49,
                                                "name": "soul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "1182:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1125",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 50,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1064,
                                            "src": "1182:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 55,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1182:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1165:46:0"
                                },
                                {
                                    "assignments": [
                                        58
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 58,
                                            "mutability": "mutable",
                                            "name": "totalBound",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 108,
                                            "src": "1265:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 57,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1265:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 61,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 59,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 586,
                                            "src": "1283:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 60,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1283:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1265:31:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "id": 68,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 64,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 62,
                                                "name": "totalBound",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 58,
                                                "src": "1375:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "hexValue": "30",
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1389:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            "src": "1375:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "||",
                                        "rightExpression": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 67,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 65,
                                                "name": "totalSoul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 48,
                                                "src": "1394:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "==",
                                            "rightExpression": {
                                                "hexValue": "30",
                                                "id": 66,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1407:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_0_by_1",
                                                    "typeString": "int_const 0"
                                                },
                                                "value": "0"
                                            },
                                            "src": "1394:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "src": "1375:33:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 94,
                                        "nodeType": "Block",
                                        "src": "1667:201:0",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    77
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 77,
                                                        "mutability": "mutable",
                                                        "name": "boundRate",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 94,
                                                        "src": "1681:14:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 76,
                                                            "name": "uint",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1681:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 81,
                                                "initialValue": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 80,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 78,
                                                        "name": "totalBound",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 58,
                                                        "src": "1698:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "/",
                                                    "rightExpression": {
                                                        "id": 79,
                                                        "name": "totalSoul",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 48,
                                                        "src": "1711:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1698:22:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1681:39:0"
                                            },
                                            {
                                                "assignments": [
                                                    83
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 83,
                                                        "mutability": "mutable",
                                                        "name": "boundQty",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 94,
                                                        "src": "1781:13:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 82,
                                                            "name": "uint",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1781:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 87,
                                                "initialValue": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 86,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "id": 84,
                                                        "name": "soulQty",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "1797:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": "*",
                                                    "rightExpression": {
                                                        "id": 85,
                                                        "name": "boundRate",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 77,
                                                        "src": "1807:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1797:19:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1781:35:0"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 89,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1836:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 90,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1836:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 91,
                                                            "name": "boundQty",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 83,
                                                            "src": "1848:8:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 88,
                                                        "name": "_mint",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 907,
                                                        "src": "1830:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256)"
                                                        }
                                                    },
                                                    "id": 92,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1830:27:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 93,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1830:27:0"
                                            }
                                        ]
                                    },
                                    "id": 95,
                                    "nodeType": "IfStatement",
                                    "src": "1371:497:0",
                                    "trueBody": {
                                        "id": 75,
                                        "nodeType": "Block",
                                        "src": "1410:31:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 70,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "1418:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 71,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "1418:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 72,
                                                            "name": "soulQty",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 37,
                                                            "src": "1430:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 69,
                                                        "name": "_mint",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 907,
                                                        "src": "1412:5:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256)"
                                                        }
                                                    },
                                                    "id": 73,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1412:26:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 74,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1412:26:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 99,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1937:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1937:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 103,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1957:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpellBound_$187",
                                                            "typeString": "contract SpellBound"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpellBound_$187",
                                                            "typeString": "contract SpellBound"
                                                        }
                                                    ],
                                                    "id": 102,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1949:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 101,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1949:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 104,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1949:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 105,
                                                "name": "soulQty",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 37,
                                                "src": "1964:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 96,
                                                "name": "soul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "1919:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1125",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 98,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1106,
                                            "src": "1919:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 106,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1919:53:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 107,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1919:53:0"
                                }
                            ]
                        },
                        "functionSelector": "a59f3e0c",
                        "id": 109,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 40,
                                "modifierName": {
                                    "id": 39,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 500,
                                    "src": "1033:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1033:12:0"
                            }
                        ],
                        "name": "enter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 37,
                                    "mutability": "mutable",
                                    "name": "soulQty",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 109,
                                    "src": "1010:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 36,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1010:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1009:14:0"
                        },
                        "returnParameters": {
                            "id": 41,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1046:0:0"
                        },
                        "scope": 187,
                        "src": "995:984:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 158,
                            "nodeType": "Block",
                            "src": "2141:398:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 117,
                                                "name": "isInitialized",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 18,
                                                "src": "2159:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "7374616b696e6720686173206e6f742079657420626567756e",
                                                "id": 118,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2174:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                },
                                                "value": "staking has not yet begun"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                }
                                            ],
                                            "id": 116,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2151:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 119,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2151:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 120,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2151:51:0"
                                },
                                {
                                    "assignments": [
                                        122
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 122,
                                            "mutability": "mutable",
                                            "name": "totalBound",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 158,
                                            "src": "2254:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 121,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2254:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 125,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 123,
                                            "name": "totalSupply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 586,
                                            "src": "2272:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 124,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2272:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2254:31:0"
                                },
                                {
                                    "assignments": [
                                        127
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 127,
                                            "mutability": "mutable",
                                            "name": "boundRate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 158,
                                            "src": "2347:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 126,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2347:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 137,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [
                                                {
                                                    "arguments": [
                                                        {
                                                            "id": 132,
                                                            "name": "this",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967268,
                                                            "src": "2387:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_SpellBound_$187",
                                                                "typeString": "contract SpellBound"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_contract$_SpellBound_$187",
                                                                "typeString": "contract SpellBound"
                                                            }
                                                        ],
                                                        "id": 131,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "lValueRequested": false,
                                                        "nodeType": "ElementaryTypeNameExpression",
                                                        "src": "2379:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_type$_t_address_$",
                                                            "typeString": "type(address)"
                                                        },
                                                        "typeName": {
                                                            "id": 130,
                                                            "name": "address",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2379:7:0",
                                                            "typeDescriptions": {}
                                                        }
                                                    },
                                                    "id": 133,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "typeConversion",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2379:13:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "expression": {
                                                    "id": 128,
                                                    "name": "soul",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 16,
                                                    "src": "2364:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_IERC20_$1125",
                                                        "typeString": "contract IERC20"
                                                    }
                                                },
                                                "id": 129,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "balanceOf",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1064,
                                                "src": "2364:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                    "typeString": "function (address) view external returns (uint256)"
                                                }
                                            },
                                            "id": 134,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2364:29:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "id": 135,
                                            "name": "totalBound",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 122,
                                            "src": "2396:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2364:42:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2347:59:0"
                                },
                                {
                                    "assignments": [
                                        139
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 139,
                                            "mutability": "mutable",
                                            "name": "rewards",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 158,
                                            "src": "2416:12:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 138,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2416:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 143,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 142,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 140,
                                            "name": "spellQty",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 111,
                                            "src": "2431:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "id": 141,
                                            "name": "boundRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 127,
                                            "src": "2442:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2431:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2416:35:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 145,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2467:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2467:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 147,
                                                "name": "spellQty",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 111,
                                                "src": "2479:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 144,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 979,
                                            "src": "2461:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 148,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2461:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 149,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2461:27:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 153,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2512:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 154,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2512:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 155,
                                                "name": "rewards",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 139,
                                                "src": "2524:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 150,
                                                "name": "soul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "2498:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1125",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 152,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1074,
                                            "src": "2498:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2498:34:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 157,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2498:34:0"
                                }
                            ]
                        },
                        "functionSelector": "67dfd4c9",
                        "id": 159,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 114,
                                "modifierName": {
                                    "id": 113,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 500,
                                    "src": "2128:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2128:12:0"
                            }
                        ],
                        "name": "leave",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 112,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 111,
                                    "mutability": "mutable",
                                    "name": "spellQty",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 159,
                                    "src": "2104:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 110,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2104:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2103:15:0"
                        },
                        "returnParameters": {
                            "id": 115,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2141:0:0"
                        },
                        "scope": 187,
                        "src": "2089:450:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 185,
                            "nodeType": "Block",
                            "src": "2730:173:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 169,
                                                "name": "isInitialized",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 18,
                                                "src": "2748:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "7374616b696e6720686173206e6f742079657420626567756e",
                                                "id": 170,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2763:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                },
                                                "value": "staking has not yet begun"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                }
                                            ],
                                            "id": 168,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2740:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 171,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2740:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 172,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2740:51:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 176,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2861:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 177,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2861:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 180,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "2881:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpellBound_$187",
                                                            "typeString": "contract SpellBound"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpellBound_$187",
                                                            "typeString": "contract SpellBound"
                                                        }
                                                    ],
                                                    "id": 179,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2873:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 178,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2873:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 181,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2873:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 182,
                                                "name": "soulQty",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 161,
                                                "src": "2888:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 173,
                                                "name": "soul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "2843:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$1125",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 175,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1106,
                                            "src": "2843:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 183,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2843:53:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 184,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2843:53:0"
                                }
                            ]
                        },
                        "functionSelector": "57f96501",
                        "id": 186,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 164,
                                "modifierName": {
                                    "id": 163,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 500,
                                    "src": "2704:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2704:12:0"
                            },
                            {
                                "id": 166,
                                "modifierName": {
                                    "id": 165,
                                    "name": "onlyOperator",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 250,
                                    "src": "2717:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2717:12:0"
                            }
                        ],
                        "name": "boundSpell",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 162,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 161,
                                    "mutability": "mutable",
                                    "name": "soulQty",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 186,
                                    "src": "2681:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 160,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2681:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2680:14:0"
                        },
                        "returnParameters": {
                            "id": 167,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2730:0:0"
                        },
                        "scope": 187,
                        "src": "2661:242:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 188,
                "src": "618:2288:0"
            }
        ],
        "src": "33:2874:0"
    },
    "functionHashes": {
        "addOperator(address)": "9870d7fe",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "boundSpell(uint256)": "57f96501",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "enter(uint256)": "a59f3e0c",
        "increaseAllowance(address,uint256)": "39509351",
        "initialize(address)": "c4d66de8",
        "leave(uint256)": "67dfd4c9",
        "name()": "06fdde03",
        "operator(address)": "9a307391",
        "operators(uint256)": "e28d4906",
        "owner()": "8da5cb5b",
        "removeOperator(address)": "ac8a584a",
        "renounceOwnership()": "715018a6",
        "soul()": "815b7a8c",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1361400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "addOperator(address)": "66375",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22623",
            "balanceOf(address)": "1356",
            "boundSpell(uint256)": "infinite",
            "decimals()": "352",
            "decreaseAllowance(address,uint256)": "infinite",
            "enter(uint256)": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "initialize(address)": "22191",
            "leave(uint256)": "infinite",
            "name()": "infinite",
            "operator(address)": "1347",
            "operators(uint256)": "2148",
            "owner()": "1093",
            "removeOperator(address)": "infinite",
            "renounceOwnership()": "23618",
            "soul()": "1203",
            "symbol()": "infinite",
            "totalSupply()": "1096",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "infinite"
        }
    }
}