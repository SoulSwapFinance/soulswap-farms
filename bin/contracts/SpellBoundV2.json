{
    "contractName": "SpellBoundV2",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "seanceStakable",
                    "type": "uint256"
                }
            ],
            "name": "enter",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "_soul",
                    "type": "address"
                },
                {
                    "internalType": "contract IERC20",
                    "name": "_seance",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "spellShare",
                    "type": "uint256"
                }
            ],
            "name": "leave",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "seance",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "soul",
            "outputs": [
                {
                    "internalType": "contract IERC20",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalPayable",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSeance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSoul",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"seanceStakable\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_soul\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_seance\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"spellShare\",\"type\":\"uint256\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seance\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soul\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPayable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSeance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSoul\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/contracts/SpellBoundV2.sol\":\"SpellBoundV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/contracts/SpellBoundV2.sol\":{\"keccak256\":\"0xf11e8a5398b15f95c3293de837c26b5d490a16e21755a1b2365d0e0472005de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1afd0f4dd6ed73401801c00f85c69e3c36a2cefe6fc814a71ec8b84bbb3ad86\",\"dweb:/ipfs/QmfFLyovfNsV3dTzLdAESFFCB9YSQw65zjh9gp58NCrqhX\"]},\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/contracts/libraries/ERC20.sol\":{\"keccak256\":\"0xe06f7ae5f9216d9b74e599e4fa71cdd735770139a7d4080d32337063e049d42a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42f1d4e43d5e82ee65733758d4566601699f423a6948532c0a7cbe296949a5bb\",\"dweb:/ipfs/QmT6KZwFj1Pk8jivm5KWKXw9Q41ipcNH8VFtcB3FCoY27Q\"]},\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
    "bytecode": "60806040523480156200001157600080fd5b50604080518082018252600a81526914dc195b1b109bdd5b9960b21b60208083019182528351808501909452600584526414d411531360da1b9084015281519192916200006191600391620000f5565b50805162000077906004906020840190620000f5565b505050620000946200008e6200009f60201b60201c565b620000a3565b6001600655620001d8565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000103906200019b565b90600052602060002090601f01602090048101928262000127576000855562000172565b82601f106200014257805160ff191683800117855562000172565b8280016001018555821562000172579182015b828111156200017257825182559160200191906001019062000155565b506200018092915062000184565b5090565b5b8082111562000180576000815560010162000185565b600281046001821680620001b057607f821691505b60208210811415620001d257634e487b7160e01b600052602260045260246000fd5b50919050565b61153880620001e86000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063a457c2d71161007c578063a457c2d714610255578063a59f3e0c14610268578063a9059cbb1461027b578063dd62ed3e1461028e578063e3b19703146102a1578063f2fde38b146102a957610142565b8063715018a61461022d578063815b7a8c146102355780638da5cb5b1461023d57806395d89b4114610245578063a2eafc811461024d57610142565b8063395093511161010a57806339509351146101c25780634853772d146101d5578063485cc955146101dd5780634ca01d45146101f257806367dfd4c91461020757806370a082311461021a57610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018557806323b872dd1461019a578063313ce567146101ad575b600080fd5b61014f6102bc565b60405161015c9190611017565b60405180910390f35b610178610173366004610f2e565b61034e565b60405161015c919061100c565b61018d61036b565b60405161015c9190611417565b6101786101a8366004610eee565b610371565b6101b5610411565b60405161015c9190611420565b6101786101d0366004610f2e565b610416565b61018d610465565b6101f06101eb366004610f79565b6104eb565b005b6101fa610592565b60405161015c9190610fbb565b6101f0610215366004610f8b565b6105a1565b61018d610228366004610e9a565b610741565b6101f061075c565b6101fa6107a7565b6101fa6107b6565b61014f6107c5565b61018d6107d4565b610178610263366004610f2e565b6107fe565b6101f0610276366004610f8b565b610879565b610178610289366004610f2e565b610970565b61018d61029c366004610eb6565b610984565b61018d6109af565b6101f06102b7366004610e9a565b6109e0565b6060600380546102cb9061149c565b80601f01602080910402602001604051908101604052809291908181526020018280546102f79061149c565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b600061036261035b610a51565b8484610a55565b50600192915050565b60025490565b600061037e848484610b09565b6001600160a01b03841660009081526001602052604081208161039f610a51565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103eb5760405162461bcd60e51b81526004016103e29061121d565b60405180910390fd5b610406856103f7610a51565b6104018685611485565b610a55565b506001949350505050565b601290565b6000610362610423610a51565b848460016000610431610a51565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054610401919061142e565b6008546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610496903090600401610fbb565b60206040518083038186803b1580156104ae57600080fd5b505afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190610fa3565b905090565b6104f3610a51565b6001600160a01b03166105046107b6565b6001600160a01b03161461052a5760405162461bcd60e51b81526004016103e290611265565b600854600160a01b900460ff16156105545760405162461bcd60e51b81526004016103e2906111f4565b600780546001600160a01b03199081166001600160a01b039485161790915560088054600160a01b9216929093169190911760ff60a01b1916179055565b6008546001600160a01b031681565b600260065414156105c45760405162461bcd60e51b81526004016103e290611364565b600260065560006105d361036b565b6105db6109af565b6105e59190611446565b905060006105f161036b565b6105f9610465565b6106039190611446565b905060006106118385611466565b9050600061061f8386611466565b905061062b3386610c3c565b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061065d9033908690600401610ff3565b602060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190610f59565b5060085460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906106e29033908590600401610ff3565b602060405180830381600087803b1580156106fc57600080fd5b505af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190610f59565b5050600160065550505050565b6001600160a01b031660009081526020819052604090205490565b610764610a51565b6001600160a01b03166107756107b6565b6001600160a01b03161461079b5760405162461bcd60e51b81526004016103e290611265565b6107a56000610d37565b565b6007546001600160a01b031681565b6005546001600160a01b031690565b6060600480546102cb9061149c565b6000806107df6109af565b905060006107eb610465565b90506107f7828261142e565b9250505090565b6000806001600061080d610a51565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156108595760405162461bcd60e51b81526004016103e29061139b565b61086f610864610a51565b856104018685611485565b5060019392505050565b6002600654141561089c5760405162461bcd60e51b81526004016103e290611364565b6002600655600854600160a01b900460ff166108ca5760405162461bcd60e51b81526004016103e290611177565b60006108d582610d89565b6008546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061090a90339030908790600401610fcf565b602060405180830381600087803b15801561092457600080fd5b505af1158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190610f59565b506109673382610dce565b50506001600655565b600061036261097d610a51565b8484610b09565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6007546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610496903090600401610fbb565b6109e8610a51565b6001600160a01b03166109f96107b6565b6001600160a01b031614610a1f5760405162461bcd60e51b81526004016103e290611265565b6001600160a01b038116610a455760405162461bcd60e51b81526004016103e2906110ef565b610a4e81610d37565b50565b3390565b6001600160a01b038316610a7b5760405162461bcd60e51b81526004016103e290611320565b6001600160a01b038216610aa15760405162461bcd60e51b81526004016103e290611135565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610afc908590611417565b60405180910390a3505050565b6001600160a01b038316610b2f5760405162461bcd60e51b81526004016103e2906112db565b6001600160a01b038216610b555760405162461bcd60e51b81526004016103e29061106a565b610b60838383610d32565b6001600160a01b03831660009081526020819052604090205481811015610b995760405162461bcd60e51b81526004016103e2906111ae565b610ba38282611485565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610bd990849061142e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c239190611417565b60405180910390a3610c36848484610d32565b50505050565b6001600160a01b038216610c625760405162461bcd60e51b81526004016103e29061129a565b610c6e82600083610d32565b6001600160a01b03821660009081526020819052604090205481811015610ca75760405162461bcd60e51b81526004016103e2906110ad565b610cb18282611485565b6001600160a01b03841660009081526020819052604081209190915560028054849290610cdf908490611485565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d22908690611417565b60405180910390a3610d32836000845b505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080610d946107d4565b610da057506001610dbd565b610da86107d4565b610db061036b565b610dba9190611446565b90505b610dc78184611466565b9392505050565b6001600160a01b038216610df45760405162461bcd60e51b81526004016103e2906113e0565b610e0060008383610d32565b8060026000828254610e12919061142e565b90915550506001600160a01b03821660009081526020819052604081208054839290610e3f90849061142e565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e82908590611417565b60405180910390a3610e9660008383610d32565b5050565b600060208284031215610eab578081fd5b8135610dc7816114ed565b60008060408385031215610ec8578081fd5b8235610ed3816114ed565b91506020830135610ee3816114ed565b809150509250929050565b600080600060608486031215610f02578081fd5b8335610f0d816114ed565b92506020840135610f1d816114ed565b929592945050506040919091013590565b60008060408385031215610f40578182fd5b8235610f4b816114ed565b946020939093013593505050565b600060208284031215610f6a578081fd5b81518015158114610dc7578182fd5b60008060408385031215610ec8578182fd5b600060208284031215610f9c578081fd5b5035919050565b600060208284031215610fb4578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561104357858101830151858201604001528201611027565b818111156110545783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526019908201527f7374616b696e6720686173206e6f742079657420626567756e00000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252600f908201526e185b1c9958591e481cdd185c9d1959608a1b604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115611441576114416114d7565b500190565b60008261146157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611480576114806114d7565b500290565b600082821015611497576114976114d7565b500390565b6002810460018216806114b057607f821691505b602082108114156114d157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610a4e57600080fdfea2646970667358221220a98c9366ce8f1a479e8fa0eb725eed7d3e670d39df124bb9946e82300b8e2b4564736f6c63430008000033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101425760003560e01c8063715018a6116100b8578063a457c2d71161007c578063a457c2d714610255578063a59f3e0c14610268578063a9059cbb1461027b578063dd62ed3e1461028e578063e3b19703146102a1578063f2fde38b146102a957610142565b8063715018a61461022d578063815b7a8c146102355780638da5cb5b1461023d57806395d89b4114610245578063a2eafc811461024d57610142565b8063395093511161010a57806339509351146101c25780634853772d146101d5578063485cc955146101dd5780634ca01d45146101f257806367dfd4c91461020757806370a082311461021a57610142565b806306fdde0314610147578063095ea7b31461016557806318160ddd1461018557806323b872dd1461019a578063313ce567146101ad575b600080fd5b61014f6102bc565b60405161015c9190611017565b60405180910390f35b610178610173366004610f2e565b61034e565b60405161015c919061100c565b61018d61036b565b60405161015c9190611417565b6101786101a8366004610eee565b610371565b6101b5610411565b60405161015c9190611420565b6101786101d0366004610f2e565b610416565b61018d610465565b6101f06101eb366004610f79565b6104eb565b005b6101fa610592565b60405161015c9190610fbb565b6101f0610215366004610f8b565b6105a1565b61018d610228366004610e9a565b610741565b6101f061075c565b6101fa6107a7565b6101fa6107b6565b61014f6107c5565b61018d6107d4565b610178610263366004610f2e565b6107fe565b6101f0610276366004610f8b565b610879565b610178610289366004610f2e565b610970565b61018d61029c366004610eb6565b610984565b61018d6109af565b6101f06102b7366004610e9a565b6109e0565b6060600380546102cb9061149c565b80601f01602080910402602001604051908101604052809291908181526020018280546102f79061149c565b80156103445780601f1061031957610100808354040283529160200191610344565b820191906000526020600020905b81548152906001019060200180831161032757829003601f168201915b5050505050905090565b600061036261035b610a51565b8484610a55565b50600192915050565b60025490565b600061037e848484610b09565b6001600160a01b03841660009081526001602052604081208161039f610a51565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103eb5760405162461bcd60e51b81526004016103e29061121d565b60405180910390fd5b610406856103f7610a51565b6104018685611485565b610a55565b506001949350505050565b601290565b6000610362610423610a51565b848460016000610431610a51565b6001600160a01b03908116825260208083019390935260409182016000908120918b1681529252902054610401919061142e565b6008546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610496903090600401610fbb565b60206040518083038186803b1580156104ae57600080fd5b505afa1580156104c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e69190610fa3565b905090565b6104f3610a51565b6001600160a01b03166105046107b6565b6001600160a01b03161461052a5760405162461bcd60e51b81526004016103e290611265565b600854600160a01b900460ff16156105545760405162461bcd60e51b81526004016103e2906111f4565b600780546001600160a01b03199081166001600160a01b039485161790915560088054600160a01b9216929093169190911760ff60a01b1916179055565b6008546001600160a01b031681565b600260065414156105c45760405162461bcd60e51b81526004016103e290611364565b600260065560006105d361036b565b6105db6109af565b6105e59190611446565b905060006105f161036b565b6105f9610465565b6106039190611446565b905060006106118385611466565b9050600061061f8386611466565b905061062b3386610c3c565b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb9061065d9033908690600401610ff3565b602060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190610f59565b5060085460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906106e29033908590600401610ff3565b602060405180830381600087803b1580156106fc57600080fd5b505af1158015610710573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107349190610f59565b5050600160065550505050565b6001600160a01b031660009081526020819052604090205490565b610764610a51565b6001600160a01b03166107756107b6565b6001600160a01b03161461079b5760405162461bcd60e51b81526004016103e290611265565b6107a56000610d37565b565b6007546001600160a01b031681565b6005546001600160a01b031690565b6060600480546102cb9061149c565b6000806107df6109af565b905060006107eb610465565b90506107f7828261142e565b9250505090565b6000806001600061080d610a51565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156108595760405162461bcd60e51b81526004016103e29061139b565b61086f610864610a51565b856104018685611485565b5060019392505050565b6002600654141561089c5760405162461bcd60e51b81526004016103e290611364565b6002600655600854600160a01b900460ff166108ca5760405162461bcd60e51b81526004016103e290611177565b60006108d582610d89565b6008546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061090a90339030908790600401610fcf565b602060405180830381600087803b15801561092457600080fd5b505af1158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190610f59565b506109673382610dce565b50506001600655565b600061036261097d610a51565b8484610b09565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6007546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610496903090600401610fbb565b6109e8610a51565b6001600160a01b03166109f96107b6565b6001600160a01b031614610a1f5760405162461bcd60e51b81526004016103e290611265565b6001600160a01b038116610a455760405162461bcd60e51b81526004016103e2906110ef565b610a4e81610d37565b50565b3390565b6001600160a01b038316610a7b5760405162461bcd60e51b81526004016103e290611320565b6001600160a01b038216610aa15760405162461bcd60e51b81526004016103e290611135565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610afc908590611417565b60405180910390a3505050565b6001600160a01b038316610b2f5760405162461bcd60e51b81526004016103e2906112db565b6001600160a01b038216610b555760405162461bcd60e51b81526004016103e29061106a565b610b60838383610d32565b6001600160a01b03831660009081526020819052604090205481811015610b995760405162461bcd60e51b81526004016103e2906111ae565b610ba38282611485565b6001600160a01b038086166000908152602081905260408082209390935590851681529081208054849290610bd990849061142e565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c239190611417565b60405180910390a3610c36848484610d32565b50505050565b6001600160a01b038216610c625760405162461bcd60e51b81526004016103e29061129a565b610c6e82600083610d32565b6001600160a01b03821660009081526020819052604090205481811015610ca75760405162461bcd60e51b81526004016103e2906110ad565b610cb18282611485565b6001600160a01b03841660009081526020819052604081209190915560028054849290610cdf908490611485565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d22908690611417565b60405180910390a3610d32836000845b505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080610d946107d4565b610da057506001610dbd565b610da86107d4565b610db061036b565b610dba9190611446565b90505b610dc78184611466565b9392505050565b6001600160a01b038216610df45760405162461bcd60e51b81526004016103e2906113e0565b610e0060008383610d32565b8060026000828254610e12919061142e565b90915550506001600160a01b03821660009081526020819052604081208054839290610e3f90849061142e565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610e82908590611417565b60405180910390a3610e9660008383610d32565b5050565b600060208284031215610eab578081fd5b8135610dc7816114ed565b60008060408385031215610ec8578081fd5b8235610ed3816114ed565b91506020830135610ee3816114ed565b809150509250929050565b600080600060608486031215610f02578081fd5b8335610f0d816114ed565b92506020840135610f1d816114ed565b929592945050506040919091013590565b60008060408385031215610f40578182fd5b8235610f4b816114ed565b946020939093013593505050565b600060208284031215610f6a578081fd5b81518015158114610dc7578182fd5b60008060408385031215610ec8578182fd5b600060208284031215610f9c578081fd5b5035919050565b600060208284031215610fb4578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b901515815260200190565b6000602080835283518082850152825b8181101561104357858101830151858201604001528201611027565b818111156110545783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526019908201527f7374616b696e6720686173206e6f742079657420626567756e00000000000000604082015260600190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b6020808252600f908201526e185b1c9958591e481cdd185c9d1959608a1b604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115611441576114416114d7565b500190565b60008261146157634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611480576114806114d7565b500290565b600082821015611497576114976114d7565b500390565b6002810460018216806114b057607f821691505b602082108114156114d157634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610a4e57600080fdfea2646970667358221220a98c9366ce8f1a479e8fa0eb725eed7d3e670d39df124bb9946e82300b8e2b4564736f6c63430008000033",
    "sourceMap": "618:2474:0:-:0;;;;;;;;;;;;-1:-1:-1;2177:113:1;;;;;;;;;;;-1:-1:-1;;;2177:113:1;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2177:113:1;;;;2243:13;;2177:113;;;2243:13;;:5;;:13;:::i;:::-;-1:-1:-1;2266:17:1;;;;:7;;:17;;;;;:::i;:::-;;2177:113;;867:23:2;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;1637:1:3;1742:7;:22;618:2474:0;;586:96:6;665:10;586:96;:::o;2041:169:2:-;2115:6;;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;618:2474:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;618:2474:0;;;-1:-1:-1;618:2474:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:7;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;618:2474:0;;;;;;",
    "deployedSourceMap": "618:2474:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4452:166;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3443:106::-;;;:::i;:::-;;;;;;;:::i;5085:453::-;;;;;;:::i;:::-;;:::i;3292:91::-;;;:::i;:::-;;;;;;;:::i;5933:212::-;;;;;;:::i;:::-;;:::i;1070:105:0:-;;;:::i;858:206::-;;;;;;:::i;:::-;;:::i;:::-;;728:20;;;:::i;:::-;;;;;;;:::i;2458:629::-;;;;;;:::i;:::-;;:::i;3607:125:1:-;;;;;;:::i;:::-;;:::i;1605:92:2:-;;;:::i;704:18:0:-;;;:::i;973:85:2:-;;;:::i;2566:102:1:-;;;:::i;1333:179:0:-;;;:::i;6632:371:1:-;;;;;;:::i;:::-;;:::i;1942:399:0:-;;;;;;:::i;:::-;;:::i;3935:172:1:-;;;;;;:::i;:::-;;:::i;4165:149::-;;;;;;:::i;:::-;;:::i;1181:101:0:-;;;:::i;1846:189:2:-;;;;;;:::i;:::-;;:::i;2355:98:1:-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2355:98;:::o;4452:166::-;4535:4;4551:39;4560:12;:10;:12::i;:::-;4574:7;4583:6;4551:8;:39::i;:::-;-1:-1:-1;4607:4:1;4452:166;;;;:::o;3443:106::-;3530:12;;3443:106;:::o;5085:453::-;5221:4;5237:36;5247:6;5255:9;5266:6;5237:9;:36::i;:::-;-1:-1:-1;;;;;5311:19:1;;5284:24;5311:19;;;:11;:19;;;;;5284:24;5331:12;:10;:12::i;:::-;-1:-1:-1;;;;;5311:33:1;-1:-1:-1;;;;;5311:33:1;;;;;;;;;;;;;5284:60;;5382:6;5362:16;:26;;5354:79;;;;-1:-1:-1;;;5354:79:1;;;;;;;:::i;:::-;;;;;;;;;5443:57;5452:6;5460:12;:10;:12::i;:::-;5474:25;5493:6;5474:16;:25;:::i;:::-;5443:8;:57::i;:::-;-1:-1:-1;5527:4:1;;5085:453;-1:-1:-1;;;;5085:453:1:o;3292:91::-;3374:2;3292:91;:::o;5933:212::-;6021:4;6037:80;6046:12;:10;:12::i;:::-;6060:7;6106:10;6069:11;:25;6081:12;:10;:12::i;:::-;-1:-1:-1;;;;;6069:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6069:25:1;;;:34;;;;;;;;;;:47;;;;:::i;1070:105:0:-;1137:6;;:31;;-1:-1:-1;;;1137:31:0;;1114:4;;-1:-1:-1;;;;;1137:6:0;;:16;;:31;;1162:4;;1137:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1130:38;;1070:105;:::o;858:206::-;1196:12:2;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;946:13:0::1;::::0;-1:-1:-1;;;946:13:0;::::1;;;945:14;937:42;;;;-1:-1:-1::0;;;937:42:0::1;;;;;;;:::i;:::-;989:4;:12:::0;;-1:-1:-1;;;;;;989:12:0;;::::1;-1:-1:-1::0;;;;;989:12:0;;::::1;;::::0;;;1011:6:::1;:16:::0;;-1:-1:-1;;;1011:16:0;::::1;::::0;;;::::1;::::0;;;::::1;-1:-1:-1::0;;;;1037:20:0::1;;::::0;;858:206::o;728:20::-;;;-1:-1:-1;;;;;728:20:0;;:::o;2458:629::-;1680:1:3;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:3;;;;;;;:::i;:::-;1680:1;2389:7;:18;2549:13:0::1;2579;:11;:13::i;:::-;2565:11;:9;:11::i;:::-;:27;;;;:::i;:::-;2549:43;;2636:15;2670:13;:11;:13::i;:::-;2654;:11;:13::i;:::-;:29;;;;:::i;:::-;2636:47:::0;-1:-1:-1;2766:14:0::1;2783:21;2796:8:::0;2783:10;:21:::1;:::i;:::-;2766:38:::0;-1:-1:-1;2857:16:0::1;2876:23;2889:10:::0;2876;:23:::1;:::i;:::-;2857:42;;2955:29;2961:10;2973;2955:5;:29::i;:::-;2994:4;::::0;:36:::1;::::0;-1:-1:-1;;;2994:36:0;;-1:-1:-1;;;;;2994:4:0;;::::1;::::0;:13:::1;::::0;:36:::1;::::0;3008:10:::1;::::0;3020:9;;2994:36:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;3040:6:0::1;::::0;:40:::1;::::0;-1:-1:-1;;;3040:40:0;;-1:-1:-1;;;;;3040:6:0;;::::1;::::0;:15:::1;::::0;:40:::1;::::0;3056:10:::1;::::0;3068:11;;3040:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;1637:1:3;2562:7;:22;-1:-1:-1;;;;2458:629:0:o;3607:125:1:-;-1:-1:-1;;;;;3707:18:1;3681:7;3707:18;;;;;;;;;;;;3607:125::o;1605:92:2:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;704:18:0:-;;;-1:-1:-1;;;;;704:18:0;;:::o;973:85:2:-;1045:6;;-1:-1:-1;;;;;1045:6:2;973:85;:::o;2566:102:1:-;2622:13;2654:7;2647:14;;;;;:::i;1333:179:0:-;1378:4;1394:14;1411:11;:9;:11::i;:::-;1394:28;;1432:16;1451:13;:11;:13::i;:::-;1432:32;-1:-1:-1;1482:23:0;1496:9;1432:32;1482:23;:::i;:::-;1475:30;;;;1333:179;:::o;6632:371:1:-;6725:4;6741:24;6768:11;:25;6780:12;:10;:12::i;:::-;-1:-1:-1;;;;;6768:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6768:25:1;;;:34;;;;;;;;;;;-1:-1:-1;6820:35:1;;;;6812:85;;;;-1:-1:-1;;;6812:85:1;;;;;;;:::i;:::-;6907:67;6916:12;:10;:12::i;:::-;6930:7;6939:34;6958:15;6939:16;:34;:::i;6907:67::-;-1:-1:-1;6992:4:1;;6632:371;-1:-1:-1;;;6632:371:1:o;1942:399:0:-;1680:1:3;2259:7;;:19;;2251:63;;;;-1:-1:-1;;;2251:63:3;;;;;;;:::i;:::-;1680:1;2389:7;:18;2018:13:0::1;::::0;-1:-1:-1;;;2018:13:0;::::1;;;2010:51;;;;-1:-1:-1::0;;;2010:51:0::1;;;;;;;:::i;:::-;2071:18;2092:29;2106:14;2092:13;:29::i;:::-;2173:6;::::0;:62:::1;::::0;-1:-1:-1;;;2173:62:0;;2071:50;;-1:-1:-1;;;;;;2173:6:0::1;::::0;:19:::1;::::0;:62:::1;::::0;2193:10:::1;::::0;2213:4:::1;::::0;2220:14;;2173:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2277:32;2283:10;2295:13;2277:5;:32::i;:::-;-1:-1:-1::0;;1637:1:3;2562:7;:22;1942:399:0:o;3935:172:1:-;4021:4;4037:42;4047:12;:10;:12::i;:::-;4061:9;4072:6;4037:9;:42::i;4165:149::-;-1:-1:-1;;;;;4280:18:1;;;4254:7;4280:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4165:149::o;1181:101:0:-;1246:4;;:29;;-1:-1:-1;;;1246:29:0;;1223:4;;-1:-1:-1;;;;;1246:4:0;;:14;;:29;;1269:4;;1246:29;;;:::i;1846:189:2:-;1196:12;:10;:12::i;:::-;-1:-1:-1;;;;;1185:23:2;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1185:23:2;;1177:68;;;;-1:-1:-1;;;1177:68:2;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:2;::::1;1926:73;;;;-1:-1:-1::0;;;1926:73:2::1;;;;;;;:::i;:::-;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;586:96:6:-;665:10;586:96;:::o;10115:370:1:-;-1:-1:-1;;;;;10246:19:1;;10238:68;;;;-1:-1:-1;;;10238:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10324:21:1;;10316:68;;;;-1:-1:-1;;;10316:68:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;10395:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;;:36;;;10446:32;;;;;10425:6;;10446:32;:::i;:::-;;;;;;;;10115:370;;;:::o;7477:679::-;-1:-1:-1;;;;;7612:20:1;;7604:70;;;;-1:-1:-1;;;7604:70:1;;;;;;;:::i;:::-;-1:-1:-1;;;;;7692:23:1;;7684:71;;;;-1:-1:-1;;;7684:71:1;;;;;;;:::i;:::-;7766:47;7787:6;7795:9;7806:6;7766:20;:47::i;:::-;-1:-1:-1;;;;;7848:17:1;;7824:21;7848:17;;;;;;;;;;;7883:23;;;;7875:74;;;;-1:-1:-1;;;7875:74:1;;;;;;;:::i;:::-;7979:22;7995:6;7979:13;:22;:::i;:::-;-1:-1:-1;;;;;7959:17:1;;;:9;:17;;;;;;;;;;;:42;;;;8011:20;;;;;;;;:30;;8035:6;;7959:9;8011:30;;8035:6;;8011:30;:::i;:::-;;;;;;;;8074:9;-1:-1:-1;;;;;8057:35:1;8066:6;-1:-1:-1;;;;;8057:35:1;;8085:6;8057:35;;;;;;:::i;:::-;;;;;;;;8103:46;8123:6;8131:9;8142:6;8103:19;:46::i;:::-;7477:679;;;;:::o;9141:551::-;-1:-1:-1;;;;;9224:21:1;;9216:67;;;;-1:-1:-1;;;9216:67:1;;;;;;;:::i;:::-;9294:49;9315:7;9332:1;9336:6;9294:20;:49::i;:::-;-1:-1:-1;;;;;9379:18:1;;9354:22;9379:18;;;;;;;;;;;9415:24;;;;9407:71;;;;-1:-1:-1;;;9407:71:1;;;;;;;:::i;:::-;9509:23;9526:6;9509:14;:23;:::i;:::-;-1:-1:-1;;;;;9488:18:1;;:9;:18;;;;;;;;;;:44;;;;9551:12;:22;;9567:6;;9488:9;9551:22;;9567:6;;9551:22;:::i;:::-;;;;-1:-1:-1;;9589:37:1;;9615:1;;-1:-1:-1;;;;;9589:37:1;;;;;;;9619:6;;9589:37;:::i;:::-;;;;;;;;9637:48;9657:7;9674:1;9678:6;9637:48;9141:551;;;:::o;2041:169:2:-;2115:6;;;-1:-1:-1;;;;;2131:17:2;;;-1:-1:-1;;;;;;2131:17:2;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2041:169;;:::o;1518:373:0:-;1586:4;1602:15;1657:14;:12;:14::i;:::-;1653:133;;-1:-1:-1;1693:1:0;1653:133;;;1769:14;:12;:14::i;:::-;1753:13;:11;:13::i;:::-;:30;;;;:::i;:::-;1740:43;;1653:133;1834:28;1852:10;1834:15;:28;:::i;:::-;1827:35;1518:373;-1:-1:-1;;;1518:373:0:o;8432:389:1:-;-1:-1:-1;;;;;8515:21:1;;8507:65;;;;-1:-1:-1;;;8507:65:1;;;;;;;:::i;:::-;8583:49;8612:1;8616:7;8625:6;8583:20;:49::i;:::-;8659:6;8643:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8675:18:1;;:9;:18;;;;;;;;;;:28;;8697:6;;8675:9;:28;;8697:6;;8675:28;:::i;:::-;;;;-1:-1:-1;;8718:37:1;;-1:-1:-1;;;;;8718:37:1;;;8735:1;;8718:37;;;;8748:6;;8718:37;:::i;:::-;;;;;;;;8766:48;8794:1;8798:7;8807:6;8766:19;:48::i;:::-;8432:389;;:::o;14:259:7:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:33;237:5;210:33;:::i;278:402::-;;;407:2;395:9;386:7;382:23;378:32;375:2;;;428:6;420;413:22;375:2;472:9;459:23;491:33;518:5;491:33;:::i;:::-;543:5;-1:-1:-1;600:2:7;585:18;;572:32;613:35;572:32;613:35;:::i;:::-;667:7;657:17;;;365:315;;;;;:::o;685:470::-;;;;831:2;819:9;810:7;806:23;802:32;799:2;;;852:6;844;837:22;799:2;896:9;883:23;915:33;942:5;915:33;:::i;:::-;967:5;-1:-1:-1;1024:2:7;1009:18;;996:32;1037:35;996:32;1037:35;:::i;:::-;789:366;;1091:7;;-1:-1:-1;;;1145:2:7;1130:18;;;;1117:32;;789:366::o;1160:327::-;;;1289:2;1277:9;1268:7;1264:23;1260:32;1257:2;;;1310:6;1302;1295:22;1257:2;1354:9;1341:23;1373:33;1400:5;1373:33;:::i;:::-;1425:5;1477:2;1462:18;;;;1449:32;;-1:-1:-1;;;1247:240:7:o;1492:297::-;;1612:2;1600:9;1591:7;1587:23;1583:32;1580:2;;;1633:6;1625;1618:22;1580:2;1670:9;1664:16;1723:5;1716:13;1709:21;1702:5;1699:32;1689:2;;1750:6;1742;1735:22;1794:430;;;1951:2;1939:9;1930:7;1926:23;1922:32;1919:2;;;1972:6;1964;1957:22;2229:190;;2341:2;2329:9;2320:7;2316:23;2312:32;2309:2;;;2362:6;2354;2347:22;2309:2;-1:-1:-1;2390:23:7;;2299:120;-1:-1:-1;2299:120:7:o;2424:194::-;;2547:2;2535:9;2526:7;2522:23;2518:32;2515:2;;;2568:6;2560;2553:22;2515:2;-1:-1:-1;2596:16:7;;2505:113;-1:-1:-1;2505:113:7:o;2623:203::-;-1:-1:-1;;;;;2787:32:7;;;;2769:51;;2757:2;2742:18;;2724:102::o;2831:375::-;-1:-1:-1;;;;;3089:15:7;;;3071:34;;3141:15;;;;3136:2;3121:18;;3114:43;3188:2;3173:18;;3166:34;;;;3021:2;3006:18;;2988:218::o;3211:274::-;-1:-1:-1;;;;;3403:32:7;;;;3385:51;;3467:2;3452:18;;3445:34;3373:2;3358:18;;3340:145::o;3490:187::-;3655:14;;3648:22;3630:41;;3618:2;3603:18;;3585:92::o;3904:603::-;;4045:2;4074;4063:9;4056:21;4106:6;4100:13;4149:6;4144:2;4133:9;4129:18;4122:34;4174:4;4187:140;4201:6;4198:1;4195:13;4187:140;;;4296:14;;;4292:23;;4286:30;4262:17;;;4281:2;4258:26;4251:66;4216:10;;4187:140;;;4345:6;4342:1;4339:13;4336:2;;;4415:4;4410:2;4401:6;4390:9;4386:22;4382:31;4375:45;4336:2;-1:-1:-1;4491:2:7;4470:15;-1:-1:-1;;4466:29:7;4451:45;;;;4498:2;4447:54;;4025:482;-1:-1:-1;;;4025:482:7:o;4512:399::-;4714:2;4696:21;;;4753:2;4733:18;;;4726:30;4792:34;4787:2;4772:18;;4765:62;-1:-1:-1;;;4858:2:7;4843:18;;4836:33;4901:3;4886:19;;4686:225::o;4916:398::-;5118:2;5100:21;;;5157:2;5137:18;;;5130:30;5196:34;5191:2;5176:18;;5169:62;-1:-1:-1;;;5262:2:7;5247:18;;5240:32;5304:3;5289:19;;5090:224::o;5319:402::-;5521:2;5503:21;;;5560:2;5540:18;;;5533:30;5599:34;5594:2;5579:18;;5572:62;-1:-1:-1;;;5665:2:7;5650:18;;5643:36;5711:3;5696:19;;5493:228::o;5726:398::-;5928:2;5910:21;;;5967:2;5947:18;;;5940:30;6006:34;6001:2;5986:18;;5979:62;-1:-1:-1;;;6072:2:7;6057:18;;6050:32;6114:3;6099:19;;5900:224::o;6129:349::-;6331:2;6313:21;;;6370:2;6350:18;;;6343:30;6409:27;6404:2;6389:18;;6382:55;6469:2;6454:18;;6303:175::o;6483:402::-;6685:2;6667:21;;;6724:2;6704:18;;;6697:30;6763:34;6758:2;6743:18;;6736:62;-1:-1:-1;;;6829:2:7;6814:18;;6807:36;6875:3;6860:19;;6657:228::o;6890:339::-;7092:2;7074:21;;;7131:2;7111:18;;;7104:30;-1:-1:-1;;;7165:2:7;7150:18;;7143:45;7220:2;7205:18;;7064:165::o;7234:404::-;7436:2;7418:21;;;7475:2;7455:18;;;7448:30;7514:34;7509:2;7494:18;;7487:62;-1:-1:-1;;;7580:2:7;7565:18;;7558:38;7628:3;7613:19;;7408:230::o;7643:356::-;7845:2;7827:21;;;7864:18;;;7857:30;7923:34;7918:2;7903:18;;7896:62;7990:2;7975:18;;7817:182::o;8004:397::-;8206:2;8188:21;;;8245:2;8225:18;;;8218:30;8284:34;8279:2;8264:18;;8257:62;-1:-1:-1;;;8350:2:7;8335:18;;8328:31;8391:3;8376:19;;8178:223::o;8406:401::-;8608:2;8590:21;;;8647:2;8627:18;;;8620:30;8686:34;8681:2;8666:18;;8659:62;-1:-1:-1;;;8752:2:7;8737:18;;8730:35;8797:3;8782:19;;8580:227::o;8812:400::-;9014:2;8996:21;;;9053:2;9033:18;;;9026:30;9092:34;9087:2;9072:18;;9065:62;-1:-1:-1;;;9158:2:7;9143:18;;9136:34;9202:3;9187:19;;8986:226::o;9217:355::-;9419:2;9401:21;;;9458:2;9438:18;;;9431:30;9497:33;9492:2;9477:18;;9470:61;9563:2;9548:18;;9391:181::o;9577:401::-;9779:2;9761:21;;;9818:2;9798:18;;;9791:30;9857:34;9852:2;9837:18;;9830:62;-1:-1:-1;;;9923:2:7;9908:18;;9901:35;9968:3;9953:19;;9751:227::o;9983:355::-;10185:2;10167:21;;;10224:2;10204:18;;;10197:30;10263:33;10258:2;10243:18;;10236:61;10329:2;10314:18;;10157:181::o;10343:177::-;10489:25;;;10477:2;10462:18;;10444:76::o;10525:184::-;10697:4;10685:17;;;;10667:36;;10655:2;10640:18;;10622:87::o;10714:128::-;;10785:1;10781:6;10778:1;10775:13;10772:2;;;10791:18;;:::i;:::-;-1:-1:-1;10827:9:7;;10762:80::o;10847:217::-;;10913:1;10903:2;;-1:-1:-1;;;10938:31:7;;10992:4;10989:1;10982:15;11020:4;10945:1;11010:15;10903:2;-1:-1:-1;11049:9:7;;10893:171::o;11069:168::-;;11175:1;11171;11167:6;11163:14;11160:1;11157:21;11152:1;11145:9;11138:17;11134:45;11131:2;;;11182:18;;:::i;:::-;-1:-1:-1;11222:9:7;;11121:116::o;11242:125::-;;11310:1;11307;11304:8;11301:2;;;11315:18;;:::i;:::-;-1:-1:-1;11352:9:7;;11291:76::o;11372:380::-;11457:1;11447:12;;11504:1;11494:12;;;11515:2;;11569:4;11561:6;11557:17;11547:27;;11515:2;11622;11614:6;11611:14;11591:18;11588:38;11585:2;;;11668:10;11663:3;11659:20;11656:1;11649:31;11703:4;11700:1;11693:15;11731:4;11728:1;11721:15;11585:2;;11427:325;;;:::o;11757:127::-;11818:10;11813:3;11809:20;11806:1;11799:31;11849:4;11846:1;11839:15;11873:4;11870:1;11863:15;11889:133;-1:-1:-1;;;;;11966:31:7;;11956:42;;11946:2;;12012:1;12009;12002:12",
    "sourcePath": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/contracts/SpellBoundV2.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/contracts/SpellBoundV2.sol",
        "exportedSymbols": {
            "Context": [
                1039
            ],
            "ERC20": [
                771
            ],
            "IERC20": [
                993
            ],
            "IERC20Metadata": [
                1018
            ],
            "Ownable": [
                875
            ],
            "ReentrancyGuard": [
                915
            ],
            "SpellBoundV2": [
                229
            ]
        },
        "id": 230,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:23:0"
            },
            {
                "absolutePath": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/contracts/libraries/ERC20.sol",
                "file": "./libraries/ERC20.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 230,
                "sourceUnit": 772,
                "src": "58:31:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "file": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 230,
                "sourceUnit": 916,
                "src": "90:127:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 4,
                "nodeType": "ImportDirective",
                "scope": 230,
                "sourceUnit": 876,
                "src": "218:117:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "file": "/Users/Uni/Documents/GitHub/soulswap/soulswap-farms/node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
                "id": 5,
                "nodeType": "ImportDirective",
                "scope": 230,
                "sourceUnit": 916,
                "src": "336:127:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "arguments": [
                            {
                                "hexValue": "5370656c6c426f756e64",
                                "id": 7,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "649:12:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_8737cb2a1e7f1bdccc9f65a30279afe89f478aebe8bb818d2cdfc114822fa65e",
                                    "typeString": "literal_string \"SpellBound\""
                                },
                                "value": "SpellBound"
                            },
                            {
                                "hexValue": "5350454c4c",
                                "id": 8,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "663:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_4e5184e280897f6080343022541e10fceffc046bc996bfbbcdf879d7c39ecf2e",
                                    "typeString": "literal_string \"SPELL\""
                                },
                                "value": "SPELL"
                            }
                        ],
                        "baseName": {
                            "id": 6,
                            "name": "ERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 771,
                            "src": "643:5:0"
                        },
                        "id": 9,
                        "nodeType": "InheritanceSpecifier",
                        "src": "643:28:0"
                    },
                    {
                        "baseName": {
                            "id": 10,
                            "name": "Ownable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 875,
                            "src": "673:7:0"
                        },
                        "id": 11,
                        "nodeType": "InheritanceSpecifier",
                        "src": "673:7:0"
                    },
                    {
                        "baseName": {
                            "id": 12,
                            "name": "ReentrancyGuard",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 915,
                            "src": "682:15:0"
                        },
                        "id": 13,
                        "nodeType": "InheritanceSpecifier",
                        "src": "682:15:0"
                    }
                ],
                "contractDependencies": [
                    771,
                    875,
                    915,
                    993,
                    1018,
                    1039
                ],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 229,
                "linearizedBaseContracts": [
                    229,
                    915,
                    875,
                    771,
                    1018,
                    993,
                    1039
                ],
                "name": "SpellBoundV2",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "815b7a8c",
                        "id": 16,
                        "mutability": "mutable",
                        "name": "soul",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "704:18:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$993",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 15,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 14,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 993,
                                "src": "704:6:0"
                            },
                            "referencedDeclaration": 993,
                            "src": "704:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$993",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "4ca01d45",
                        "id": 19,
                        "mutability": "mutable",
                        "name": "seance",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "728:20:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$993",
                            "typeString": "contract IERC20"
                        },
                        "typeName": {
                            "id": 18,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 17,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 993,
                                "src": "728:6:0"
                            },
                            "referencedDeclaration": 993,
                            "src": "728:6:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$993",
                                "typeString": "contract IERC20"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "isInitialized",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "754:18:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                        },
                        "typeName": {
                            "id": 20,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "754:4:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 50,
                            "nodeType": "Block",
                            "src": "927:137:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 34,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "UnaryOperation",
                                                "operator": "!",
                                                "prefix": true,
                                                "src": "945:14:0",
                                                "subExpression": {
                                                    "id": 33,
                                                    "name": "isInitialized",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 21,
                                                    "src": "946:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "616c72656164792073746172746564",
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "961:17:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7289c62f45ea1c3676168bb5b7dc2294ee10e421d34f7aadbabe764b7d6aa28d",
                                                    "typeString": "literal_string \"already started\""
                                                },
                                                "value": "already started"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7289c62f45ea1c3676168bb5b7dc2294ee10e421d34f7aadbabe764b7d6aa28d",
                                                    "typeString": "literal_string \"already started\""
                                                }
                                            ],
                                            "id": 32,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "937:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "937:42:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "937:42:0"
                                },
                                {
                                    "expression": {
                                        "id": 40,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 38,
                                            "name": "soul",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 16,
                                            "src": "989:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$993",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 39,
                                            "name": "_soul",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 24,
                                            "src": "996:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$993",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "989:12:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$993",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 41,
                                    "nodeType": "ExpressionStatement",
                                    "src": "989:12:0"
                                },
                                {
                                    "expression": {
                                        "id": 44,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 42,
                                            "name": "seance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 19,
                                            "src": "1011:6:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$993",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 43,
                                            "name": "_seance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 27,
                                            "src": "1020:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_IERC20_$993",
                                                "typeString": "contract IERC20"
                                            }
                                        },
                                        "src": "1011:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$993",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "id": 45,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1011:16:0"
                                },
                                {
                                    "expression": {
                                        "id": 48,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 46,
                                            "name": "isInitialized",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 21,
                                            "src": "1037:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 47,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1053:4:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "1037:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 49,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1037:20:0"
                                }
                            ]
                        },
                        "functionSelector": "485cc955",
                        "id": 51,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 30,
                                "modifierName": {
                                    "id": 29,
                                    "name": "onlyOwner",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 818,
                                    "src": "917:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "917:9:0"
                            }
                        ],
                        "name": "initialize",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 28,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 24,
                                    "mutability": "mutable",
                                    "name": "_soul",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51,
                                    "src": "878:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$993",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 23,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 22,
                                            "name": "IERC20",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 993,
                                            "src": "878:6:0"
                                        },
                                        "referencedDeclaration": 993,
                                        "src": "878:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$993",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 27,
                                    "mutability": "mutable",
                                    "name": "_seance",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 51,
                                    "src": "892:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$993",
                                        "typeString": "contract IERC20"
                                    },
                                    "typeName": {
                                        "id": 26,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 25,
                                            "name": "IERC20",
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 993,
                                            "src": "892:6:0"
                                        },
                                        "referencedDeclaration": 993,
                                        "src": "892:6:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$993",
                                            "typeString": "contract IERC20"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "877:30:0"
                        },
                        "returnParameters": {
                            "id": 31,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "927:0:0"
                        },
                        "scope": 229,
                        "src": "858:206:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 64,
                            "nodeType": "Block",
                            "src": "1120:55:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 60,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1162:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpellBoundV2_$229",
                                                            "typeString": "contract SpellBoundV2"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpellBoundV2_$229",
                                                            "typeString": "contract SpellBoundV2"
                                                        }
                                                    ],
                                                    "id": 59,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1154:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 58,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1154:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 61,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1154:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 56,
                                                "name": "seance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 19,
                                                "src": "1137:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$993",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 57,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 932,
                                            "src": "1137:16:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 62,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1137:31:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 55,
                                    "id": 63,
                                    "nodeType": "Return",
                                    "src": "1130:38:0"
                                }
                            ]
                        },
                        "functionSelector": "4853772d",
                        "id": 65,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "totalSeance",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 52,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1090:2:0"
                        },
                        "returnParameters": {
                            "id": 55,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 54,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 65,
                                    "src": "1114:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 53,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1114:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1113:6:0"
                        },
                        "scope": 229,
                        "src": "1070:105:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 78,
                            "nodeType": "Block",
                            "src": "1229:53:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 74,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "1269:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpellBoundV2_$229",
                                                            "typeString": "contract SpellBoundV2"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpellBoundV2_$229",
                                                            "typeString": "contract SpellBoundV2"
                                                        }
                                                    ],
                                                    "id": 73,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1261:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 72,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1261:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 75,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1261:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 70,
                                                "name": "soul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "1246:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$993",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 71,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 932,
                                            "src": "1246:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 76,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1246:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 69,
                                    "id": 77,
                                    "nodeType": "Return",
                                    "src": "1239:36:0"
                                }
                            ]
                        },
                        "functionSelector": "e3b19703",
                        "id": 79,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "totalSoul",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 66,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1199:2:0"
                        },
                        "returnParameters": {
                            "id": 69,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 68,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 79,
                                    "src": "1223:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 67,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1223:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1222:6:0"
                        },
                        "scope": 229,
                        "src": "1181:101:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 98,
                            "nodeType": "Block",
                            "src": "1384:128:0",
                            "statements": [
                                {
                                    "assignments": [
                                        85
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 85,
                                            "mutability": "mutable",
                                            "name": "soulTotal",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 98,
                                            "src": "1394:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 84,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1394:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 88,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 86,
                                            "name": "totalSoul",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 79,
                                            "src": "1411:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 87,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1411:11:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1394:28:0"
                                },
                                {
                                    "assignments": [
                                        90
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 90,
                                            "mutability": "mutable",
                                            "name": "seanceTotal",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 98,
                                            "src": "1432:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 89,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1432:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 93,
                                    "initialValue": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 91,
                                            "name": "totalSeance",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 65,
                                            "src": "1451:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                "typeString": "function () view returns (uint256)"
                                            }
                                        },
                                        "id": 92,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1451:13:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1432:32:0"
                                },
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 96,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 94,
                                            "name": "seanceTotal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 90,
                                            "src": "1482:11:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                            "id": 95,
                                            "name": "soulTotal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 85,
                                            "src": "1496:9:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1482:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 83,
                                    "id": 97,
                                    "nodeType": "Return",
                                    "src": "1475:30:0"
                                }
                            ]
                        },
                        "functionSelector": "a2eafc81",
                        "id": 99,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "totalPayable",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 80,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1354:2:0"
                        },
                        "returnParameters": {
                            "id": 83,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 82,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 99,
                                    "src": "1378:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 81,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1378:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1377:6:0"
                        },
                        "scope": 229,
                        "src": "1333:179:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 132,
                            "nodeType": "Block",
                            "src": "1592:299:0",
                            "statements": [
                                {
                                    "assignments": [
                                        107
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 107,
                                            "mutability": "mutable",
                                            "name": "spellPower",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 132,
                                            "src": "1602:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 106,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1602:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 108,
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1602:15:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 112,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 109,
                                                "name": "totalPayable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 99,
                                                "src": "1657:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view returns (uint256)"
                                                }
                                            },
                                            "id": 110,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1657:14:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "hexValue": "30",
                                            "id": 111,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1675:1:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_0_by_1",
                                                "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                        },
                                        "src": "1657:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "falseBody": {
                                        "id": 126,
                                        "nodeType": "Block",
                                        "src": "1738:48:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 124,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 118,
                                                        "name": "spellPower",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 107,
                                                        "src": "1740:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "commonType": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "id": 123,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "leftExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 119,
                                                                "name": "totalSupply",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 314,
                                                                "src": "1753:11:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                    "typeString": "function () view returns (uint256)"
                                                                }
                                                            },
                                                            "id": 120,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1753:13:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "nodeType": "BinaryOperation",
                                                        "operator": "/",
                                                        "rightExpression": {
                                                            "arguments": [],
                                                            "expression": {
                                                                "argumentTypes": [],
                                                                "id": 121,
                                                                "name": "totalPayable",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 99,
                                                                "src": "1769:12:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                                    "typeString": "function () view returns (uint256)"
                                                                }
                                                            },
                                                            "id": 122,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "functionCall",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "1769:14:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "src": "1753:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1740:43:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 125,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1740:43:0"
                                            }
                                        ]
                                    },
                                    "id": 127,
                                    "nodeType": "IfStatement",
                                    "src": "1653:133:0",
                                    "trueBody": {
                                        "id": 117,
                                        "nodeType": "Block",
                                        "src": "1678:19:0",
                                        "statements": [
                                            {
                                                "expression": {
                                                    "id": 115,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "id": 113,
                                                        "name": "spellPower",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 107,
                                                        "src": "1680:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "hexValue": "31",
                                                        "id": 114,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "1693:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_1_by_1",
                                                            "typeString": "int_const 1"
                                                        },
                                                        "value": "1"
                                                    },
                                                    "src": "1680:14:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "id": 116,
                                                "nodeType": "ExpressionStatement",
                                                "src": "1680:14:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 130,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 128,
                                            "name": "_seanceStakable",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 101,
                                            "src": "1834:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "id": 129,
                                            "name": "spellPower",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 107,
                                            "src": "1852:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "1834:28:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 105,
                                    "id": 131,
                                    "nodeType": "Return",
                                    "src": "1827:35:0"
                                }
                            ]
                        },
                        "id": 133,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "mintableSpell",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 102,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 101,
                                    "mutability": "mutable",
                                    "name": "_seanceStakable",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "1541:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 100,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1541:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1540:22:0"
                        },
                        "returnParameters": {
                            "id": 105,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 104,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 133,
                                    "src": "1586:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 103,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1586:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1585:6:0"
                        },
                        "scope": 229,
                        "src": "1518:373:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 169,
                            "nodeType": "Block",
                            "src": "2000:341:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 141,
                                                "name": "isInitialized",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 21,
                                                "src": "2018:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "7374616b696e6720686173206e6f742079657420626567756e",
                                                "id": 142,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2033:27:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                },
                                                "value": "staking has not yet begun"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_2d6922a93ceb21b6c02f95534c4e3b9e160a6d023209f5e6365ffa558e0dd691",
                                                    "typeString": "literal_string \"staking has not yet begun\""
                                                }
                                            ],
                                            "id": 140,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2010:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 143,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2010:51:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 144,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2010:51:0"
                                },
                                {
                                    "assignments": [
                                        146
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 146,
                                            "mutability": "mutable",
                                            "name": "spellMintable",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 169,
                                            "src": "2071:18:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 145,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2071:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 150,
                                    "initialValue": {
                                        "arguments": [
                                            {
                                                "id": 148,
                                                "name": "seanceStakable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 135,
                                                "src": "2106:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 147,
                                            "name": "mintableSpell",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 133,
                                            "src": "2092:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                                "typeString": "function (uint256) view returns (uint256)"
                                            }
                                        },
                                        "id": 149,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2092:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2071:50:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 154,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2193:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 155,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2193:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 158,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "2213:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SpellBoundV2_$229",
                                                            "typeString": "contract SpellBoundV2"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SpellBoundV2_$229",
                                                            "typeString": "contract SpellBoundV2"
                                                        }
                                                    ],
                                                    "id": 157,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2205:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 156,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2205:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 159,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2205:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 160,
                                                "name": "seanceStakable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 135,
                                                "src": "2220:14:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 151,
                                                "name": "seance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 19,
                                                "src": "2173:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$993",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 153,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transferFrom",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 974,
                                            "src": "2173:19:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2173:62:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 162,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2173:62:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 164,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2283:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 165,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2283:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 166,
                                                "name": "spellMintable",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 146,
                                                "src": "2295:13:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 163,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 632,
                                            "src": "2277:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 167,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2277:32:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 168,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2277:32:0"
                                }
                            ]
                        },
                        "functionSelector": "a59f3e0c",
                        "id": 170,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 138,
                                "modifierName": {
                                    "id": 137,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 914,
                                    "src": "1987:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1987:12:0"
                            }
                        ],
                        "name": "enter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 136,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 135,
                                    "mutability": "mutable",
                                    "name": "seanceStakable",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 170,
                                    "src": "1957:19:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 134,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1957:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1956:21:0"
                        },
                        "returnParameters": {
                            "id": 139,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2000:0:0"
                        },
                        "scope": 229,
                        "src": "1942:399:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "body": {
                            "id": 227,
                            "nodeType": "Block",
                            "src": "2512:575:0",
                            "statements": [
                                {
                                    "assignments": [
                                        178
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 178,
                                            "mutability": "mutable",
                                            "name": "soulRate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 227,
                                            "src": "2549:13:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 177,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2549:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 184,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 183,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 179,
                                                "name": "totalSoul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 79,
                                                "src": "2565:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view returns (uint256)"
                                                }
                                            },
                                            "id": 180,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2565:11:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 181,
                                                "name": "totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 314,
                                                "src": "2579:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view returns (uint256)"
                                                }
                                            },
                                            "id": 182,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2579:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2565:27:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2549:43:0"
                                },
                                {
                                    "assignments": [
                                        186
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 186,
                                            "mutability": "mutable",
                                            "name": "seanceRate",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 227,
                                            "src": "2636:15:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 185,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2636:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 192,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 191,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 187,
                                                "name": "totalSeance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 65,
                                                "src": "2654:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view returns (uint256)"
                                                }
                                            },
                                            "id": 188,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2654:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                            "arguments": [],
                                            "expression": {
                                                "argumentTypes": [],
                                                "id": 189,
                                                "name": "totalSupply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 314,
                                                "src": "2670:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                                    "typeString": "function () view returns (uint256)"
                                                }
                                            },
                                            "id": 190,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2670:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2654:29:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2636:47:0"
                                },
                                {
                                    "assignments": [
                                        194
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 194,
                                            "mutability": "mutable",
                                            "name": "soulShare",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 227,
                                            "src": "2766:14:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 193,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2766:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 198,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 197,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 195,
                                            "name": "spellShare",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 172,
                                            "src": "2783:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "id": 196,
                                            "name": "soulRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 178,
                                            "src": "2796:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2783:21:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2766:38:0"
                                },
                                {
                                    "assignments": [
                                        200
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 200,
                                            "mutability": "mutable",
                                            "name": "seanceShare",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 227,
                                            "src": "2857:16:0",
                                            "stateVariable": false,
                                            "storageLocation": "default",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "typeName": {
                                                "id": 199,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "2857:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 204,
                                    "initialValue": {
                                        "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        },
                                        "id": 203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 201,
                                            "name": "spellShare",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 172,
                                            "src": "2876:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "*",
                                        "rightExpression": {
                                            "id": 202,
                                            "name": "seanceRate",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 186,
                                            "src": "2889:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2876:23:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2857:42:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 206,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2961:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 207,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2961:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 208,
                                                "name": "spellShare",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 172,
                                                "src": "2973:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 205,
                                            "name": "_burn",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 703,
                                            "src": "2955:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 209,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2955:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 210,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2955:29:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 214,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "3008:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 215,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3008:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 216,
                                                "name": "soulShare",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 194,
                                                "src": "3020:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 211,
                                                "name": "soul",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 16,
                                                "src": "2994:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$993",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 213,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 942,
                                            "src": "2994:13:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 217,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2994:36:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 218,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2994:36:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 222,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "3056:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 223,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "3056:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 224,
                                                "name": "seanceShare",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 200,
                                                "src": "3068:11:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 219,
                                                "name": "seance",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 19,
                                                "src": "3040:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_IERC20_$993",
                                                    "typeString": "contract IERC20"
                                                }
                                            },
                                            "id": 221,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 942,
                                            "src": "3040:15:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) external returns (bool)"
                                            }
                                        },
                                        "id": 225,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3040:40:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 226,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3040:40:0"
                                }
                            ]
                        },
                        "functionSelector": "67dfd4c9",
                        "id": 228,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 175,
                                "modifierName": {
                                    "id": 174,
                                    "name": "nonReentrant",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 914,
                                    "src": "2499:12:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "2499:12:0"
                            }
                        ],
                        "name": "leave",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 173,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 172,
                                    "mutability": "mutable",
                                    "name": "spellShare",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 228,
                                    "src": "2473:15:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 171,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2473:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2472:17:0"
                        },
                        "returnParameters": {
                            "id": 176,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2512:0:0"
                        },
                        "scope": 229,
                        "src": "2458:629:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 230,
                "src": "618:2474:0"
            }
        ],
        "src": "33:3060:0"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "enter(uint256)": "a59f3e0c",
        "increaseAllowance(address,uint256)": "39509351",
        "initialize(address,address)": "485cc955",
        "leave(uint256)": "67dfd4c9",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "seance()": "4ca01d45",
        "soul()": "815b7a8c",
        "symbol()": "95d89b41",
        "totalPayable()": "a2eafc81",
        "totalSeance()": "4853772d",
        "totalSoul()": "e3b19703",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1086400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "22623",
            "balanceOf(address)": "1400",
            "decimals()": "352",
            "decreaseAllowance(address,uint256)": "infinite",
            "enter(uint256)": "infinite",
            "increaseAllowance(address,uint256)": "infinite",
            "initialize(address,address)": "infinite",
            "leave(uint256)": "infinite",
            "name()": "infinite",
            "owner()": "1137",
            "renounceOwnership()": "23530",
            "seance()": "1159",
            "soul()": "1115",
            "symbol()": "infinite",
            "totalPayable()": "infinite",
            "totalSeance()": "infinite",
            "totalSoul()": "infinite",
            "totalSupply()": "1096",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "infinite"
        },
        "internal": {
            "mintableSpell(uint256)": "infinite"
        }
    }
}